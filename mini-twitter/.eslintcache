[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\EditTargetTweet.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\HealthNews.js":"17","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Technology.js":"18","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Sports.js":"19"},{"size":562,"mtime":1610366181316,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2359,"mtime":1610818794518,"results":"23","hashOfConfig":"21"},{"size":4310,"mtime":1610819193456,"results":"24","hashOfConfig":"21"},{"size":243,"mtime":1610134991880,"results":"25","hashOfConfig":"21"},{"size":11541,"mtime":1610798652917,"results":"26","hashOfConfig":"21"},{"size":3638,"mtime":1610798695237,"results":"27","hashOfConfig":"21"},{"size":1131,"mtime":1610818915354,"results":"28","hashOfConfig":"21"},{"size":10038,"mtime":1610818899887,"results":"29","hashOfConfig":"21"},{"size":5057,"mtime":1610350884562,"results":"30","hashOfConfig":"21"},{"size":4029,"mtime":1610803630093,"results":"31","hashOfConfig":"21"},{"size":584,"mtime":1610803026239,"results":"32","hashOfConfig":"21"},{"size":6281,"mtime":1610819092407,"results":"33","hashOfConfig":"21"},{"size":2291,"mtime":1610703936556,"results":"34","hashOfConfig":"21"},{"size":5891,"mtime":1610744308246,"results":"35","hashOfConfig":"21"},{"size":2538,"mtime":1610799417994,"results":"36","hashOfConfig":"21"},{"size":1280,"mtime":1610801585603,"results":"37","hashOfConfig":"21"},{"size":1342,"mtime":1610803383610,"results":"38","hashOfConfig":"21"},{"size":1330,"mtime":1610803583908,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8zyv1d",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["85","86"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["102"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["103","104"],"import React, { Component } from 'react';\r\nimport TweetRow from './Tweet-row';\r\n\r\nclass TweetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: props.user.displayName,\r\n            userName: props.user.userName,\r\n            favesTweets: props.user.favesTweets,\r\n            tweets: props.user.tweets.tweet,\r\n            listedTweets: props.listedTweets,\r\n            currentTweet: ''\r\n\r\n        }\r\n\r\n        this.handleFaveToggle = this.handleFaveToggle.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //I save the favestweet by tweet id so, I add favetoggle for the target favestweet  \r\n    handleFaveToggle(tweetId) {\r\n        //bring target tweet by id\r\n        //check if tweet in favesTweets and get their index \r\n        //if it's there toggle them ? remove from favestweets : add it to favestweets\r\n        //edit on db to push new favestweets array\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        console.log('faves tweet in state', favesTweets);\r\n        console.log('tweet id', tweetId);\r\n        const tweetIndex = favesTweets.indexOf(tweetId);\r\n        console.log(\"tweet index: \", tweetIndex);\r\n        tweetIndex < 0 ? console.log('not there') : console.log('already there');\r\n        // if (tweetIndex < 0) {\r\n        //     faves.unshift(tweetId)\r\n        // } else {\r\n        //     faves.splice(tweetIndex, 1)\r\n        // }\r\n        tweetIndex < 0 ? favesTweets.unshift(tweetId) : favesTweets.splice(tweetIndex, 1);\r\n        // console.log(\"after if statment :\", favesTweets);\r\n        // this.setState({ favesTweets });\r\n        // console.log(\"state edit: \", this.state.favesTweets);\r\n        // console.log(faves);\r\n        // console.log(tweetIndex);\r\n        // this.setState({ favesTweets: faves });\r\n        this.editFavesTweetsOnDb(favesTweets);\r\n    }\r\n\r\n    editFavesTweetsOnDb = (favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        console.log(\"state: \", favesTweets);\r\n        console.log(\"before edit: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    //to delete specific tweet - by id \r\n    handleDeleteClick = (tweetId) => {\r\n        //bring target tweet by id\r\n        //check if tweet in Tweetslist and get their index \r\n        //check if id store in favestweet list === there ? delete id : skip\r\n        //delete tweets from tweet list \r\n        //edit on db \r\n        const allTweets = this.state.tweets.slice();\r\n        // console.log(\"all tweets: \", allTweets);\r\n        // console.log(\"target tweet id: \", tweetId);\r\n        // const tweetIndex = allTweets.indexOf(allTweets[tweetId - 1]);\r\n        const tweetIndex = allTweets.indexOf(this.getTweet(tweetId));\r\n        // console.log(\"target tweet index: \", tweetIndex);\r\n        // console.log(\"tweet index: \", tweetIndex);\r\n        // tweetIndex > -1 ? console.log('remove', allTweets[tweetIndex].content) : console.log('not there');\r\n        tweetIndex > -1 ? allTweets.splice(tweetIndex, 1) : console.log(\"object\");\r\n        // console.log(allTweets);\r\n\r\n        // //second check if the target tweet in favesTweet\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        const faveTweetIndex = favesTweets.indexOf((tweetId));\r\n        // console.log(faveTweetIndex);\r\n        // tweetIndex < 0 ? console.log(\"skip\") : console.log(\"remove\");\r\n        if (tweetIndex > -1) {\r\n            favesTweets.splice(faveTweetIndex, 1);\r\n        }\r\n\r\n        this.deleteTweetFromDb1(allTweets, favesTweets);\r\n    }\r\n\r\n    deleteTweetFromDb1 = (tweets, favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        //first delete tweet from alltweet list\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        // console.log(\"tweet list before remove: \", getUserDetails[0].tweets.tweet);\r\n        getUserDetails[userId].tweets.tweet = tweets;\r\n        // console.log(\"after edit: \", getUserDetails[0].tweets.tweet);\r\n\r\n        // console.log(\"faves tweets before delete: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        // console.log(\"after faves tweets after delete: \", getUserDetails[userId].favesTweets);\r\n\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        this.setState({ favesTweets });\r\n        // console.log(\"faves tweets in state: \", this.state.favesTweets);\r\n        window.location.reload();\r\n        this.setState({ tweets });\r\n    }\r\n\r\n    getTweet = (tweetId) => {\r\n        let id = 0;\r\n        this.state.tweets.map((element, index) => {\r\n            // console.log(tweetId);\r\n            // console.log(element.id);\r\n\r\n            if (element.id === tweetId) {\r\n                id = element;\r\n                // console.log(\"yes\");\r\n\r\n            }\r\n        });\r\n\r\n        return id;\r\n    }\r\n\r\n    handleOptionClicked = () => {\r\n        const option = this.props.handleOptionClicked;\r\n        if (option === 'deleteAllTweetsClicked') {\r\n            console.log(option);\r\n            this.handleDeleteAllTweetsClicked();\r\n        } else if (option === 'deleteAllFavesTweetsClicked') {\r\n            console.log(option);\r\n            this.handleDeleteAllFavesTweetsClicked();\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n        console.log(this.props.user.tweets.tweet.length);\r\n        if (this.props.user.tweets.tweet.length === 0) {\r\n            //there is no tweet to delete it \r\n        } else {\r\n            //get current data in db\r\n            //delete all tweets\r\n            const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n            //first delete alltweet list\r\n            const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n            getUserDetails[userId].tweets.tweet = [];\r\n            this.setState({ tweets: [] });\r\n\r\n            //first delete allfavestweet list\r\n            getUserDetails[userId].favesTweets = [];\r\n            this.setState({ favesTweets: [] });\r\n\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n        console.log(this.props.user.favesTweets.length);\r\n        if (this.props.user.favesTweets.length === 0) {\r\n            //there is no tweet to delete it \r\n        } else {\r\n            //get current data in db\r\n            //delete all tweets\r\n            const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n            //first delete alltweet list\r\n            const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n            //first delete allfavestweet list\r\n            getUserDetails[userId].favesTweets = [];\r\n            this.setState({ favesTweets: [] });\r\n\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n\r\n    handleEditClicked = (tweetId, newContent) => {\r\n\r\n        console.log(\"edit clicked\" + tweetId, newContent);\r\n        this.editTargetTweetOnDb(tweetId, newContent);\r\n    }\r\n\r\n\r\n    editTargetTweetOnDb = (tweetId, newContent) => {\r\n        //get current tweet in db\r\n        //set new ontent to current tweet  \r\n        //save the db \r\n\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n        getUserDetails[userId].tweets.tweet.map((element, index) => {\r\n            if (element.id === tweetId) {\r\n                element.content = newContent\r\n                console.log(element);\r\n            }\r\n        })\r\n        // console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        window.location.reload();\r\n        // this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    render() {\r\n        this.handleOptionClicked();\r\n        const tweets = this.props.user.tweets.tweet.map((element, index) => {\r\n            if (this.state.favesTweets.includes(element.id)) {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} handleEditClicked={this.handleEditClicked} tweetId={element.id} tweetContent={element.content} isFave={true} />\r\n                );\r\n            } else {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} handleEditClicked={this.handleEditClicked} tweetId={element.id} tweetContent={element.content} isFave={false} />);\r\n            }\r\n        })\r\n\r\n        // //the faves tweet saved by id of tweet so, fisrt: we need to get faves tweet id then get these tweet by id\r\n        const favesTweet = this.state.favesTweets.map((favesTweetId, index) => {\r\n            // console.log(favesTweetId, ' ');\r\n            // const getTweet = this.state.tweets[0];\r\n            // console.log(this.getTweet(favesTweetId));\r\n            const getTweet = this.getTweet(favesTweetId);\r\n            // console.log(favesTweetId, ' ');\r\n            if (getTweet !== undefined) {\r\n                // console.log(favesTweetId);\r\n                // console.log(' content ', getTweet.content);\r\n\r\n                return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetContent={getTweet.content} isFave={true} />\r\n                )\r\n            }\r\n            return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} tweetContent={getTweet.content} isFave={true} />\r\n            )\r\n            // console.log(this.props.userLoggedInId);\r\n\r\n        });\r\n        // const favesTweet = ''\r\n\r\n        // console.log(this.state.displayName);\r\n        return (\r\n            // {this.state.tweet1.forEach(element => {\r\n            //     console.log(element.content);\r\n            // })}\r\n            <div className=\"TweetList\" >\r\n                {/* <TweetRow userName={this.state.userName} tweetId={1} tweetContent={this.state.tweet} /> */}\r\n                { this.state.listedTweets === 'all' ?\r\n                    this.props.user.tweets.tweet.length !== 0 ? tweets : 'There is no tweets! Start write your tweet Now' :\r\n                    this.props.user.favesTweets.length !== 0 ? favesTweet : 'There is no Faves Tweets'\r\n                }\r\n                {/* {this.state.listedTweets === 'all' ? this.state.favesTweets.length < 0 ? '' : favesTweet : ''} */}\r\n\r\n                {/* {tweets} */}\r\n                {/**<FavesTweets />*/}\r\n                {/* {favesTweet} */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["105","106","107"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["108","109","110"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["111","112","113","114","115","116"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    Nav\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Sports from './Sports';\r\nimport HealthNews from './HealthNews';\r\nimport Technology from './Technology';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Explore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tab1responseData: [],\r\n            tab2responseData: [],\r\n            tab3responseData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bringAxios()\r\n    }\r\n\r\n    // reset = (tabResponseData) => {\r\n    //     this.setState({ responseData: [] })\r\n    // }\r\n    //     // onClick={() => this.bringAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit')}\r\n\r\n    bringAxios = (url, tab) => {\r\n        const limit = 5;\r\n        axios\r\n            .get(`${url}=${limit}`)\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                console.log(tab);\r\n                this.setState({ [tab]: responseData })\r\n                console.log(this.state.tab2responseData);\r\n                // setResponseFilmsData(res, limit);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"Explore container\">\r\n                    <Tabs defaultActiveKey=\"Sports\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Sports\" title=\"Sports\">\r\n                            <Sports responseData={this.state.tab1responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path='/expolre/Sports' render={props => <Sports {...props} responseData={this.state.responseData} callBackAxios={this.bringAxios} />} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"HealthNews\" title=\"Health\" >\r\n                            <HealthNews responseData={this.state.tab2responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/news\" component={News} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"Technology\" title=\"Technology\">\r\n                            <Technology responseData={this.state.tab3responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/Technology\" component={Technology} /> */}\r\n                        </Tab>\r\n                    </Tabs>\r\n                    {/* <Tabs id=\"uncontrolled-tab-example\" defaultActiveKey=\"Sports\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/expolre/Sports\" eventKey=\"Sports\" ><i className=\"fa fa-home\"></i>{'  '}Sports</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/Technology\" eventKey=\"Technology\" ><i className=\"fa fa-newspaper\"></i>{'  '}Technology</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/news\" eventKey=\"News\"><i className=\"fa fa-star\"></i>{'  '}News</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Route path='/expolre/Sports' component={Sports} />\r\n                            <Route path='/explore/Technology' component={Technology} />\r\n                            <Route path='/explore/news' component={News} />\r\n                        </Tab.Content>\r\n\r\n                    </Tabs> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explore;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",["117","118"],"import React, { Component } from 'react';\r\nimport '../comonents-style/AxiosContentRow.css'\r\nimport news from '../news.png'\r\nimport { Card } from 'react-bootstrap'\r\nclass AxiosContentRow extends Component {\r\n    render() {\r\n        return (\r\n            <Card className=\"AxiosContentRow\">\r\n                {this.props.imgUrl !== null ? <img src={this.props.imgUrl} /> : <img src={news} />}\r\n                <p>{this.props.title}</p>\r\n                {/* <p>{\" ` \" + this.props.quetContent + \" ` \"}</p> */}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AxiosContentRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["119","120","121"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["122"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js",["123","124"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap'\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n        // console.log(this.state.[fieldName]);\r\n        // console.log(fieldName);\r\n\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        // const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        // if (this.state.userId <= (getTwitterDB.length + 1)) {\r\n        //     this.setState({\r\n        //         userId: getTwitterDB.length + 1\r\n        //     })\r\n        // }\r\n        // if (fieldName !== 'password') {\r\n        //     this.validation(fieldName, event.target.value);\r\n        // }\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * When the user click on sign in button the signIn function will be call\r\n     */\r\n    signIn = (e) => {\r\n        e.preventDefault();\r\n        this.validation();\r\n    }//end-signIn fun.\r\n\r\n    /**\r\n    * After clicked on sign in button the validation fun. will be call via signIn func.\r\n    * validation func. => check if the user name and email are not exsists \r\n    */\r\n    validation = () => {\r\n        if (this.state.userName === '' || this.state.password === '') {\r\n            console.log(\"please fill the input required\");\r\n        } else {\r\n            // console.log(\"you are not register\");\r\n            // //get Twitter Db from local storage\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n                //the TwitterDb is empty\r\n                //alert => your are not registerd\r\n                console.log(\"you are not register\");\r\n            } else {\r\n                // console.log(\"you are register\");\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n                    if (element.userName === this.state.userName) {\r\n                        // console.log(\"step check userName ==> pass\");\r\n                        if (element.password === this.state.password) {\r\n                            // console.log(\"step check password ==> pass\");\r\n                            parseInt(localStorage.setItem(\"userLoggedInId\", element.id))\r\n                            this.props.history.push(\"/user/home\")\r\n                        } else {\r\n                            // console.log(\"Your password is error \");\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'password' })\r\n                        }\r\n                    } else if (getTwitterDB.length - 1 === index) {\r\n                        // console.log(\"Your User Name is error or you are not register\");\r\n                        this.alertMessage();\r\n                        this.setState({ alert: true, alertValue: 'userName' })\r\n\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }//end-validation fun.\r\n\r\n    /**\r\n      * the alerMessage fun. will be call via validation\r\n      * if the user name and email are not exsist the alert message will be show\r\n      */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is not exsist';\r\n        } else if (this.state.alertValue === 'password') {\r\n            alertValue = 'The passwrod is not correct';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className='SignIn'>\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>Welcome Back!</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.signIn}>Sign In</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\EditTargetTweet.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\HealthNews.js",["125"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass HealthNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('https://newsapi.org/v2/top-headlines?country=sa&apiKey=6d73526b0ae34c5d9b8d1d9b7ba6c9da&category=health&pageSize', 'tab2responseData');\r\n        \r\n    }\r\n\r\n    render() {\r\n         console.log(this.props.responseData);\r\n         let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.articles.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.urlToImage} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HealthNews;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Technology.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Sports.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":10,"column":3,"nodeType":"132","messageId":"133","endLine":10,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":11,"column":3,"nodeType":"132","messageId":"133","endLine":11,"endColumn":9},{"ruleId":"130","severity":1,"message":"135","line":13,"column":3,"nodeType":"132","messageId":"133","endLine":13,"endColumn":7},{"ruleId":"130","severity":1,"message":"136","line":15,"column":8,"nodeType":"132","messageId":"133","endLine":15,"endColumn":12},{"ruleId":"130","severity":1,"message":"137","line":16,"column":8,"nodeType":"132","messageId":"133","endLine":16,"endColumn":15},{"ruleId":"130","severity":1,"message":"138","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":14},{"ruleId":"130","severity":1,"message":"139","line":21,"column":3,"nodeType":"132","messageId":"133","endLine":21,"endColumn":6},{"ruleId":"130","severity":1,"message":"140","line":22,"column":3,"nodeType":"132","messageId":"133","endLine":22,"endColumn":6},{"ruleId":"130","severity":1,"message":"141","line":23,"column":3,"nodeType":"132","messageId":"133","endLine":23,"endColumn":6},{"ruleId":"130","severity":1,"message":"142","line":24,"column":3,"nodeType":"132","messageId":"133","endLine":24,"endColumn":6},{"ruleId":"130","severity":1,"message":"143","line":25,"column":3,"nodeType":"132","messageId":"133","endLine":25,"endColumn":10},{"ruleId":"130","severity":1,"message":"144","line":26,"column":3,"nodeType":"132","messageId":"133","endLine":26,"endColumn":17},{"ruleId":"130","severity":1,"message":"145","line":27,"column":3,"nodeType":"132","messageId":"133","endLine":27,"endColumn":11},{"ruleId":"130","severity":1,"message":"146","line":36,"column":8,"nodeType":"132","messageId":"133","endLine":36,"endColumn":17},{"ruleId":"130","severity":1,"message":"147","line":40,"column":8,"nodeType":"132","messageId":"133","endLine":40,"endColumn":18},{"ruleId":"130","severity":1,"message":"148","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":121,"column":48,"nodeType":"151","messageId":"152","endLine":121,"endColumn":50},{"ruleId":"149","severity":1,"message":"150","line":207,"column":66,"nodeType":"151","messageId":"152","endLine":207,"endColumn":68},{"ruleId":"130","severity":1,"message":"153","line":4,"column":22,"nodeType":"132","messageId":"133","endLine":4,"endColumn":28},{"ruleId":"130","severity":1,"message":"134","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":5,"endColumn":11},{"ruleId":"130","severity":1,"message":"154","line":6,"column":5,"nodeType":"132","messageId":"133","endLine":6,"endColumn":10},{"ruleId":"130","severity":1,"message":"155","line":48,"column":16,"nodeType":"132","messageId":"133","endLine":48,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":114,"column":51,"nodeType":"158","messageId":"159","endLine":114,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":129,"column":51,"nodeType":"151","messageId":"152","endLine":129,"endColumn":53},{"ruleId":"130","severity":1,"message":"140","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":5,"endColumn":8},{"ruleId":"130","severity":1,"message":"141","line":6,"column":5,"nodeType":"132","messageId":"133","endLine":6,"endColumn":8},{"ruleId":"130","severity":1,"message":"142","line":7,"column":5,"nodeType":"132","messageId":"133","endLine":7,"endColumn":8},{"ruleId":"130","severity":1,"message":"134","line":11,"column":5,"nodeType":"132","messageId":"133","endLine":11,"endColumn":11},{"ruleId":"130","severity":1,"message":"154","line":12,"column":5,"nodeType":"132","messageId":"133","endLine":12,"endColumn":10},{"ruleId":"130","severity":1,"message":"135","line":13,"column":5,"nodeType":"132","messageId":"133","endLine":13,"endColumn":9},{"ruleId":"160","severity":1,"message":"161","line":9,"column":47,"nodeType":"162","endLine":9,"endColumn":78},{"ruleId":"160","severity":1,"message":"161","line":9,"column":81,"nodeType":"162","endLine":9,"endColumn":99},{"ruleId":"130","severity":1,"message":"153","line":12,"column":22,"nodeType":"132","messageId":"133","endLine":12,"endColumn":28},{"ruleId":"130","severity":1,"message":"134","line":13,"column":5,"nodeType":"132","messageId":"133","endLine":13,"endColumn":11},{"ruleId":"130","severity":1,"message":"138","line":19,"column":8,"nodeType":"132","messageId":"133","endLine":19,"endColumn":14},{"ruleId":"130","severity":1,"message":"163","line":2,"column":25,"nodeType":"132","messageId":"133","endLine":2,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":68,"column":51,"nodeType":"158","messageId":"159","endLine":68,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":75,"column":51,"nodeType":"151","messageId":"152","endLine":75,"endColumn":53},{"ruleId":"130","severity":1,"message":"164","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'HealthNews' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Router' is defined but never used.","'Route' is defined but never used.","'newUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]