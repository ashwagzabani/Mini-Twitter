[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"17","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js":"18"},{"size":562,"mtime":1610366181316,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2124,"mtime":1610698705242,"results":"22","hashOfConfig":"20"},{"size":4011,"mtime":1610606802922,"results":"23","hashOfConfig":"20"},{"size":243,"mtime":1610134991880,"results":"24","hashOfConfig":"20"},{"size":9613,"mtime":1610745110697,"results":"25","hashOfConfig":"20"},{"size":2624,"mtime":1610699521320,"results":"26","hashOfConfig":"20"},{"size":1084,"mtime":1610744476996,"results":"27","hashOfConfig":"20"},{"size":10015,"mtime":1610743496564,"results":"28","hashOfConfig":"20"},{"size":5057,"mtime":1610350884562,"results":"29","hashOfConfig":"20"},{"size":3943,"mtime":1610615765396,"results":"30","hashOfConfig":"20"},{"size":712,"mtime":1610612179851,"results":"31","hashOfConfig":"20"},{"size":738,"mtime":1610613642744,"results":"32","hashOfConfig":"20"},{"size":2373,"mtime":1610619155203,"results":"33","hashOfConfig":"20"},{"size":496,"mtime":1610618285939,"results":"34","hashOfConfig":"20"},{"size":5757,"mtime":1610703764289,"results":"35","hashOfConfig":"20"},{"size":2291,"mtime":1610703936556,"results":"36","hashOfConfig":"20"},{"size":5891,"mtime":1610744308246,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8zyv1d",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["86","87"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Explore from './components/Explore';\nimport Search from './components/Search';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Tab,\n  Row,\n  Col,\n  Nav,\n  Popover,\n  OverlayTrigger,\n  Dropdown\n} from 'react-bootstrap'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Nav from 'react-bootstrap/Nav'\n// import Popover from 'react-bootstrap/Popover'\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport 'font-awesome/css/font-awesome.min.css';\nimport TwitterDB from './TwitterDB'\nimport LandingPage from './components/Landing-page';\nimport RegisterForm from './components/Register-form';\nimport UserHomePage from './components/UserHomePage';\nimport News from './components/News';\nimport SignIn from './components/SignIn';\n\nclass App extends Component {\n\n  //to check if there is a db store on local storage , unless create a db \n  componentDidMount() {\n    if (localStorage.getItem('TwitterDB') === null) {\n      console.log('empty');\n      localStorage.setItem('TwitterDB', [])\n    } else {\n      console.log('not empty');\n    }\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path='/register' component={RegisterForm} />\n          <Route path='/user' component={UserHomePage} />\n          <Route path='/signIn' component={SignIn} />\n\n          {/* <Route path=\"/explore/news\" render={props => <News {...props} />} /> /> */}\n          {/* <Route path='/user/home' render={props => <Home {...props} />} /> */}\n          {/* <Route path='/user/explore' component={Explore} /> */}\n          {/* <Route path='/user/search' component={Search} /> */}\n          {/* <Route path='/user/favesTweets' component={FavesTweets} /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["102"],"import React, { Component } from 'react';\r\nimport TweetList from './Tweet-list';\r\nimport '../comonents-style/Home.css'\r\nimport NewTweet from './NewTweet';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // props.history.location.state.userId\r\n            userLoggedInId: parseInt(localStorage.getItem('userLoggedInId')),\r\n            showComponent: false,\r\n            handleClicked: false,\r\n            userLoggedInDetails: {},\r\n            newTweetContent: ''\r\n        }\r\n\r\n        this.getTheNewTweetContent = this.getTheNewTweetContent.bind(this)\r\n        this.insertNewTweet = this.insertNewTweet.bind(this)\r\n    }\r\n\r\n    getUserLoggedInDetails = () => {\r\n        // newTweetContent\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[userLoggedInId - 1]\r\n        });\r\n    }\r\n    handleAddClicked = () => {\r\n        // console.log(\"add icon clicked\");\r\n        this.setState({\r\n            showComponent: true,\r\n            handleClicked: true\r\n        });\r\n\r\n    }\r\n\r\n    insertNewTweet = (newTweetComponent) => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const indexOfUserId = this.state.userLoggedInId - 1;\r\n        const currentTweets = getUserDetails[indexOfUserId].tweets.tweet;\r\n        console.log(currentTweets.length);\r\n        console.log(newTweetComponent);\r\n        const newTweet = {\r\n            id: currentTweets.length + 1,\r\n            content: newTweetComponent\r\n        };\r\n        console.log(indexOfUserId);\r\n        // console.log(getUserDetails[indexOfUserId].tweets.tweet);\r\n        currentTweets.unshift(newTweet);\r\n        getUserDetails[indexOfUserId].tweets.tweet = currentTweets;\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[indexOfUserId]\r\n        });\r\n\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            showComponent: false,\r\n            handleClicked: false\r\n        });\r\n        // console.log(\"handleShowModalToggle value :\", this.state.showComponent);\r\n    }\r\n\r\n    getTheNewTweetContent = (newTweetContent) => {\r\n        this.setState({ newTweetContent: newTweetContent })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getUserLoggedInDetails();\r\n\r\n    }\r\n\r\n    handleSignOutClicked = () => {\r\n        // console.log(this.props.handleOptionClicked);\r\n        if (this.props.handleOptionClicked === 'signOutClicked') {\r\n            console.log('hello');\r\n            // this.props.history.push(\"/\");\r\n            // console.log(this.props.history);\r\n            return <Route path=\"/user/home\" to=\"/\" />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.handleSignOutClicked();\r\n        return (\r\n            <div className=\"Home\">\r\n                {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? this.props.history.push(\"/\") : (\r\n                    <>\r\n                        <TweetList getUserDetails={() => this.getUserLoggedInDetails()} user={this.state.userLoggedInDetails} listedTweets={this.props.listedTweets} handleOptionClicked={this.props.handleOptionClicked} />\r\n                        {this.props.listedTweets === 'all' ? <span className=\"addIcon\" onClick={() => this.handleAddClicked()} ><i className=\"fa fa-plus-circle\"></i></span> : ''}\r\n                        {/* <NewTweet /> */}\r\n                        {this.state.handleClicked ? <NewTweet handleShow={this.handleShow} showModalStatus={this.state.handleClicked} insertNewTweet={this.insertNewTweet} /> : null}\r\n                    </>\r\n                )}\r\n                {/*home page*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["103","104"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",["105"],"import React, { Component } from 'react';\r\nimport TwitterDB from '../TwitterDB'\r\nimport '../comonents-style/Tweet-row.css'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nclass TweetRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     displayName: 'ashwag',\r\n        //     tweets: []\r\n        // };\r\n        this.handleFavesClick = this.handleFavesClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n    }\r\n    handleFavesClick = () => {\r\n        console.log(\"fave icon clicked\");\r\n        this.props.isFaveToggle(this.props.tweetId)\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        console.log(\"delee icon clicked\");\r\n        this.props.handleDeleteClick(this.props.tweetId)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n        //this.getUserLoggedInDetails();\r\n        // this.getUserLoggedInDetails();\r\n        // console.log(getUserDetails[0].displayName);\r\n        // console.log(this.state.tweets);\r\n        // console.log(this.state.displayName);\r\n        const isFave = (this.props.isFave) ? 'fave' : '';\r\n        // console.log(\"tweet : \" + this.props.tweetContent + ' ' + this.props.isFave);\r\n        return (\r\n            <div className=\"TweetRow\">\r\n                {/* <div className=\"Tweet\">\r\n                    <div className=\"userDetails\">{this.props.userName}</div>\r\n                    <div className=\"container\">{this.props.tweetContent}</div>\r\n                    <div className=\"optionsIcon\">\r\n                        <span>\r\n                            <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                            <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                        </span>\r\n                    </div>\r\n                </div> */}\r\n                <Card className=\"Tweet\">\r\n                    <Card.Header >{this.props.userName}</Card.Header>\r\n                    <Card.Body className=\"container\">\r\n                        <Card.Text>\r\n                            {this.props.tweetContent}\r\n                        </Card.Text>\r\n                        <footer>\r\n                            <span>\r\n                                <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                                <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                            </span>\r\n                        </footer>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["106","107","108"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["109","110","111"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Button,\r\n    Card\r\n} from 'react-bootstrap'\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: '',\r\n            alert: false\r\n\r\n        }\r\n\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * When the user click on register button the register function will be call\r\n     */\r\n    register = (e) => {\r\n\r\n        e.preventDefault();\r\n        //call validation method \r\n        //if validtion ir true => redirect to user home page\r\n        this.validation();\r\n\r\n        // console.log(this.state.TwitterDB);\r\n    }//end-register fun.\r\n\r\n    /**\r\n     * after allow the user to register his information will be saved in db - localstorage\r\n     */\r\n    getNewUser = (id) => {\r\n        let newUser = {};\r\n        return newUser = {\r\n            \"id\": id,\r\n            \"userName\": this.state.userName,\r\n            \"displayName\": this.state.displayName,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"tweets\": {\r\n                \"tweet\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"content\": \"Hello, this my fisrt tweet\"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"content\": \"Good morning\"\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"content\": \"Good afternoon\"\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"content\": \"hello\"\r\n                    },\r\n                    {\r\n                        \"id\": 5,\r\n                        \"content\": \"TEST1\"\r\n                    },\r\n                    {\r\n                        \"id\": 6,\r\n                        \"content\": \"test2\"\r\n                    },\r\n                    {\r\n                        \"id\": 7,\r\n                        \"content\": \"ashwag\"\r\n                    },\r\n                    {\r\n                        \"id\": 8,\r\n                        \"content\": \"SEI-14\"\r\n                    },\r\n                    {\r\n                        \"id\": 9,\r\n                        \"content\": \"today\"\r\n                    },\r\n                    {\r\n                        \"id\": 10,\r\n                        \"content\": \"today\"\r\n                    }\r\n                ]\r\n            },\r\n            \"favesTweets\": []\r\n        }\r\n    }//end-getNewUser fun.\r\n\r\n    /**\r\n     * After clicked on register button the validation fun. will be call via register func.\r\n     * validation func. => check if the user name and email are already register \r\n     */\r\n    validation = () => {\r\n\r\n        if (this.state.userName === '' || this.state.displayName === '' || this.state.email === '' || (this.state.password !== '' && this.state.password.length < 6)) {\r\n            // console.log(\"please fill the input required\");\r\n            //alert error\r\n\r\n        } else {\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n\r\n                //the TwitterDb is empty,so there is no users to check\r\n                let arrOfObject = [];\r\n                let userId = 1;\r\n                const newUser = this.getNewUser(userId);\r\n                localStorage.setItem('userLoggedInId', userId)\r\n                arrOfObject.push(newUser);\r\n                localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject))\r\n                this.props.history.push(\"/user/home\")\r\n\r\n            } else {\r\n\r\n                // nedd check if the userName or Email already exsist\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n\r\n                    //after check all of db and the user name and email are not exsist allow user to register\r\n                    if (((getTwitterDB.length - 1) === index) && (element.userName !== this.state.userName) && (element.email !== this.state.email)) {\r\n\r\n                        // console.log(\"passed\");\r\n                        const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                        let userId = getTwitterDB.length + 1;\r\n                        localStorage.setItem('userLoggedInId', userId)\r\n                        const newUser = this.getNewUser(userId)\r\n                        this.setState({ userId })\r\n                        getTwitterDB.push(newUser);\r\n                        localStorage.setItem('TwitterDB', JSON.stringify(getTwitterDB));\r\n                        this.props.history.push(\"/user/home\")\r\n\r\n                    } else {\r\n\r\n                        if (element.userName === this.state.userName) {\r\n\r\n                            // console.log(\"the user Name already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'userName' })\r\n                            if (element.email === this.state.email) {\r\n                                // console.log(\"the email already exsist\");\r\n                                //alert error\r\n                                this.alertMessage();\r\n                                this.setState({ alert: true, alertValue: 'userName & email' })\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            // console.log(\"the email already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'email' })\r\n\r\n                        }// end-else\r\n                    }// end-else\r\n                })//end-map\r\n            }//end-else\r\n        }//end-else\r\n    }//end-validation fun.\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * the alerMessage fun. will be call via validation\r\n     * if the user name and email are already exsist the alert message will be show\r\n     */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is already used';\r\n        } else if (this.state.alertValue === 'email') {\r\n            alertValue = 'The email is already registered';\r\n        } else if (this.state.alertValue === 'userName & email') {\r\n            alertValue = 'The user name and the email are already registered';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"RegisterForm\" >\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>User Information</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Display Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"displayName\" value={this.state.displayName} placeholder=\"Enter display name\" onChange={this.assignValueToState} />\r\n                                {this.state.displayName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.assignValueToState} />\r\n                                {this.state.email === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.register}>Register</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["112","113","114","115","116","117"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    Nav\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Movies from './Movies';\r\nimport News from './News';\r\nimport Quets from './Quets';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Explore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tab1responseData: [],\r\n            tab2responseData: [],\r\n            tab3responseData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bringAxios()\r\n    }\r\n\r\n    // reset = (tabResponseData) => {\r\n    //     this.setState({ responseData: [] })\r\n    // }\r\n    //     // onClick={() => this.bringAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit')}\r\n\r\n    bringAxios = (url, tab) => {\r\n        const limit = 5;\r\n        axios\r\n            .get(`${url}=${limit}`)\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                console.log(tab);\r\n                this.setState({ [tab]: responseData })\r\n                console.log(this.state.tab2responseData);\r\n                // setResponseFilmsData(res, limit);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"Explore container\">\r\n                    <Tabs defaultActiveKey=\"Movies\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Movies\" title=\"Movies\">\r\n                            <Movies responseData={this.state.tab1responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path='/expolre/movies' render={props => <Movies {...props} responseData={this.state.responseData} callBackAxios={this.bringAxios} />} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"News\" title=\"News\" >\r\n                            <News responseData={this.state.tab2responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/news\" component={News} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"quets\" title=\"Quets\">\r\n                            <Quets responseData={this.state.tab3responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/quets\" component={Quets} /> */}\r\n                        </Tab>\r\n                    </Tabs>\r\n                    {/* <Tabs id=\"uncontrolled-tab-example\" defaultActiveKey=\"Movies\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/expolre/movies\" eventKey=\"Movies\" ><i className=\"fa fa-home\"></i>{'  '}Movies</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/quets\" eventKey=\"Quets\" ><i className=\"fa fa-newspaper\"></i>{'  '}Quets</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/news\" eventKey=\"News\"><i className=\"fa fa-star\"></i>{'  '}News</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Route path='/expolre/movies' component={Movies} />\r\n                            <Route path='/explore/quets' component={Quets} />\r\n                            <Route path='/explore/news' component={News} />\r\n                        </Tab.Content>\r\n\r\n                    </Tabs> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explore;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js",["118"],"import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Quets extends Component {\r\n\r\n    componentDidMount() {\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n    }\r\n    render() {\r\n        // const getQuetList = this.props.responseData.map(element => {\r\n        //     console.log(element.title);\r\n        //     return (<AxiosContentRow quetContent={element.description} author={element.director} />);\r\n        // })\r\n        // console.log(this.state.quetsList);\r\n        return (\r\n            <div className=\"Quets\">\r\n                {/* {getQuetList} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quets;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js",["119"],"import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Movies extends Component {\r\n    componentDidMount() {\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n    }\r\n\r\n    render() {\r\n        // const getQuetList = this.props.responseData.map(element => {\r\n        //     console.log(element.title);\r\n        //     return (<AxiosContentRow quetContent={element.description} author={element.director} />);\r\n        // })\r\n        console.log(this.props.responseData);\r\n        return (\r\n            <div className=\"Movies\">\r\n                hello\r\n                {/* {getQuetList} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js",["120"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit', 'tab2responseData');\r\n        // this.setState({ responseData: this.props.responseData })\r\n        // this.bringAxios();\r\n    }\r\n    // bringAxios = () => {\r\n    //     const limit = 5;\r\n    //     axios\r\n    //         .get(`http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit=${limit}`)\r\n    //         .then(response => {\r\n    //             const responseData = response.data.data;\r\n    //             this.setState({ responseData })\r\n    //             // setResponseFilmsData(res, limit);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //         });\r\n    // }\r\n    /**\r\n     * http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports&limit=5&languages=en\r\n     */\r\n    render() {\r\n        // this.props.callBackAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit');\r\n        // console.log(this.props.responseData.length);\r\n        console.log(this.props.responseData);\r\n        // const a = this.props.responseData.data;\r\n        // console.log(a[0]);\r\n        // this.bringAxios();\r\n        let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.data.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.image} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",["121"],"import React, { Component } from 'react';\r\nimport '../comonents-style/AxiosContentRow.css'\r\n\r\nclass AxiosContentRow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AxiosContentRow\">\r\n                {this.props.imgUrl !== null ? <img src={this.props.imgUrl} /> : ''}\r\n                <p>{this.props.title}</p>\r\n                {/* <p>{\" ` \" + this.props.quetContent + \" ` \"}</p> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AxiosContentRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["122","123"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    Popover,\r\n    OverlayTrigger,\r\n    Dropdown\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Explore from './Explore';\r\nimport Search from './Search';\r\nimport '../comonents-style/Header.css'\r\n\r\nclass UserHomePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // deleteAllTweetsClicked: false,\r\n            // deleteAllFavesTweetsClicked: false,\r\n            // signOutClicked: false\r\n            handleTypeClicked: ''\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllFavesTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handlesignOutClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'signOutClicked'\r\n        })\r\n        localStorage.setItem(\"userLoggedInId\", -1)\r\n        console.log(localStorage.getItem(\"userLoggedInId\"));\r\n    }\r\n\r\n    userLoggedInDisplayName = () => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        const userDisplayName = getUserDetails[userLoggedInId - 1].displayName;\r\n        return (<span>{userDisplayName}</span>)\r\n\r\n    }\r\n\r\n    render() {\r\n        //pop up message \r\n        const popover = (\r\n            <Popover>\r\n                {/* <ul>\r\n            <li>My Profile</li>\r\n            <li>Followers</li>\r\n            <li>Sign out</li>\r\n          </ul> */}\r\n                <Dropdown href=\"#/action-1\">\r\n                    <Dropdown>\r\n                        <span>Settings</span>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllTweetsClicked}>Delete All Tweets</Dropdown.Item>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllFavesTweetsClicked}>Delete All Favorite Tweets</Dropdown.Item>\r\n                    </Dropdown>\r\n                    <Dropdown.Item as={Link} to=\"/\" onClick={this.handlesignOutClicked}>Sign out</Dropdown.Item>\r\n                </Dropdown>\r\n            </Popover>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Home\" >\r\n                <div className=\"header header-home\">\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Home\">\r\n                        <Row>\r\n                            <Col sm={3}>\r\n                                <Nav variant=\"pills\" className=\"flex-column\">\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/home\" eventKey=\"Home\" ><i className=\"fa fa-home\"></i>{'  '}Home</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/explore\" eventKey=\"Explore\" ><i className=\"fa fa-newspaper\"></i>{'  '}News</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/favesTweets\" eventKey=\"favesTweets\"><i className=\"fa fa-star\"></i>{'  '}favesTweets</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/search\" eventKey=\"search\"><i className=\"fa fa-search\"></i>{'  '}search</Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            </Col>\r\n                            <Col sm={9}>\r\n                                <div>\r\n                                    {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? '' : this.userLoggedInDisplayName()\r\n                                    }\r\n                                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                                        <span className=\"options\">\r\n                                            <i className=\"fa fa-bars\">\r\n                                            </i>\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <Tab.Content>\r\n                                    {/* <Tab.Pane eventKey=\"Home\">\r\n                                    <Route path='/user/home' render={props => <Home {...props} />} />\r\n                                </Tab.Pane> */}\r\n                                    {/* <Tab.Pane eventKey=\"second\">\r\n                    <Route path='/news' component={News} />\r\n                  </Tab.Pane> */}\r\n                                    <Route path='/user/home' render={props => <Home {...props} listedTweets='all' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                    <Route path='/user/explore' component={Explore} />\r\n                                    <Route path='/user/favesTweets' render={props => <Home {...props} listedTweets='favesTweets' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                    <Route path='/user/search' component={Search} />\r\n                                </Tab.Content>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab.Container>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHomePage;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["124"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js",["125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":3,"nodeType":"133","messageId":"134","endLine":5,"endColumn":9},{"ruleId":"131","severity":1,"message":"135","line":7,"column":3,"nodeType":"133","messageId":"134","endLine":7,"endColumn":7},{"ruleId":"131","severity":1,"message":"136","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":12},{"ruleId":"131","severity":1,"message":"137","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":15},{"ruleId":"131","severity":1,"message":"138","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":14},{"ruleId":"131","severity":1,"message":"139","line":15,"column":3,"nodeType":"133","messageId":"134","endLine":15,"endColumn":6},{"ruleId":"131","severity":1,"message":"140","line":16,"column":3,"nodeType":"133","messageId":"134","endLine":16,"endColumn":6},{"ruleId":"131","severity":1,"message":"141","line":17,"column":3,"nodeType":"133","messageId":"134","endLine":17,"endColumn":6},{"ruleId":"131","severity":1,"message":"142","line":18,"column":3,"nodeType":"133","messageId":"134","endLine":18,"endColumn":6},{"ruleId":"131","severity":1,"message":"143","line":19,"column":3,"nodeType":"133","messageId":"134","endLine":19,"endColumn":10},{"ruleId":"131","severity":1,"message":"144","line":20,"column":3,"nodeType":"133","messageId":"134","endLine":20,"endColumn":17},{"ruleId":"131","severity":1,"message":"145","line":21,"column":3,"nodeType":"133","messageId":"134","endLine":21,"endColumn":11},{"ruleId":"131","severity":1,"message":"146","line":30,"column":8,"nodeType":"133","messageId":"134","endLine":30,"endColumn":17},{"ruleId":"131","severity":1,"message":"147","line":34,"column":8,"nodeType":"133","messageId":"134","endLine":34,"endColumn":12},{"ruleId":"131","severity":1,"message":"148","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":119,"column":48,"nodeType":"151","messageId":"152","endLine":119,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":123,"column":28,"nodeType":"155","messageId":"156","endLine":123,"endColumn":30},{"ruleId":"131","severity":1,"message":"146","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"157","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":5,"column":5,"nodeType":"133","messageId":"134","endLine":5,"endColumn":11},{"ruleId":"131","severity":1,"message":"158","line":6,"column":5,"nodeType":"133","messageId":"134","endLine":6,"endColumn":10},{"ruleId":"131","severity":1,"message":"159","line":48,"column":16,"nodeType":"133","messageId":"134","endLine":48,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":114,"column":51,"nodeType":"155","messageId":"156","endLine":114,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":129,"column":51,"nodeType":"151","messageId":"152","endLine":129,"endColumn":53},{"ruleId":"131","severity":1,"message":"140","line":5,"column":5,"nodeType":"133","messageId":"134","endLine":5,"endColumn":8},{"ruleId":"131","severity":1,"message":"141","line":6,"column":5,"nodeType":"133","messageId":"134","endLine":6,"endColumn":8},{"ruleId":"131","severity":1,"message":"142","line":7,"column":5,"nodeType":"133","messageId":"134","endLine":7,"endColumn":8},{"ruleId":"131","severity":1,"message":"132","line":11,"column":5,"nodeType":"133","messageId":"134","endLine":11,"endColumn":11},{"ruleId":"131","severity":1,"message":"158","line":12,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":10},{"ruleId":"131","severity":1,"message":"135","line":13,"column":5,"nodeType":"133","messageId":"134","endLine":13,"endColumn":9},{"ruleId":"131","severity":1,"message":"160","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":23},{"ruleId":"131","severity":1,"message":"160","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":23},{"ruleId":"131","severity":1,"message":"161","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":8,"column":47,"nodeType":"164","endLine":8,"endColumn":78},{"ruleId":"131","severity":1,"message":"157","line":12,"column":22,"nodeType":"133","messageId":"134","endLine":12,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":13,"column":5,"nodeType":"133","messageId":"134","endLine":13,"endColumn":11},{"ruleId":"131","severity":1,"message":"165","line":2,"column":25,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":68,"column":51,"nodeType":"155","messageId":"156","endLine":68,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":75,"column":51,"nodeType":"151","messageId":"152","endLine":75,"endColumn":53},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'News' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'newUser' is assigned a value but never used.","'AxiosContentRow' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]