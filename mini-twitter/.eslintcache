[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"17","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js":"18"},{"size":562,"mtime":1610366181316,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2124,"mtime":1610698705242,"results":"22","hashOfConfig":"20"},{"size":4011,"mtime":1610606802922,"results":"23","hashOfConfig":"20"},{"size":243,"mtime":1610134991880,"results":"24","hashOfConfig":"20"},{"size":8560,"mtime":1610555791060,"results":"25","hashOfConfig":"20"},{"size":2624,"mtime":1610699521320,"results":"26","hashOfConfig":"20"},{"size":1250,"mtime":1610712075939,"results":"27","hashOfConfig":"20"},{"size":10140,"mtime":1610742570956,"results":"28","hashOfConfig":"20"},{"size":5057,"mtime":1610350884562,"results":"29","hashOfConfig":"20"},{"size":3943,"mtime":1610615765396,"results":"30","hashOfConfig":"20"},{"size":712,"mtime":1610612179851,"results":"31","hashOfConfig":"20"},{"size":738,"mtime":1610613642744,"results":"32","hashOfConfig":"20"},{"size":2373,"mtime":1610619155203,"results":"33","hashOfConfig":"20"},{"size":496,"mtime":1610618285939,"results":"34","hashOfConfig":"20"},{"size":5757,"mtime":1610703764289,"results":"35","hashOfConfig":"20"},{"size":2291,"mtime":1610703936556,"results":"36","hashOfConfig":"20"},{"size":7853,"mtime":1610737586185,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8zyv1d",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["87","88"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Explore from './components/Explore';\nimport Search from './components/Search';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Tab,\n  Row,\n  Col,\n  Nav,\n  Popover,\n  OverlayTrigger,\n  Dropdown\n} from 'react-bootstrap'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Nav from 'react-bootstrap/Nav'\n// import Popover from 'react-bootstrap/Popover'\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport 'font-awesome/css/font-awesome.min.css';\nimport TwitterDB from './TwitterDB'\nimport LandingPage from './components/Landing-page';\nimport RegisterForm from './components/Register-form';\nimport UserHomePage from './components/UserHomePage';\nimport News from './components/News';\nimport SignIn from './components/SignIn';\n\nclass App extends Component {\n\n  //to check if there is a db store on local storage , unless create a db \n  componentDidMount() {\n    if (localStorage.getItem('TwitterDB') === null) {\n      console.log('empty');\n      localStorage.setItem('TwitterDB', [])\n    } else {\n      console.log('not empty');\n    }\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path='/register' component={RegisterForm} />\n          <Route path='/user' component={UserHomePage} />\n          <Route path='/signIn' component={SignIn} />\n\n          {/* <Route path=\"/explore/news\" render={props => <News {...props} />} /> /> */}\n          {/* <Route path='/user/home' render={props => <Home {...props} />} /> */}\n          {/* <Route path='/user/explore' component={Explore} /> */}\n          {/* <Route path='/user/search' component={Search} /> */}\n          {/* <Route path='/user/favesTweets' component={FavesTweets} /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["103"],"import React, { Component } from 'react';\r\nimport TweetList from './Tweet-list';\r\nimport '../comonents-style/Home.css'\r\nimport NewTweet from './NewTweet';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // props.history.location.state.userId\r\n            userLoggedInId: parseInt(localStorage.getItem('userLoggedInId')),\r\n            showComponent: false,\r\n            handleClicked: false,\r\n            userLoggedInDetails: {},\r\n            newTweetContent: ''\r\n        }\r\n\r\n        this.getTheNewTweetContent = this.getTheNewTweetContent.bind(this)\r\n        this.insertNewTweet = this.insertNewTweet.bind(this)\r\n    }\r\n\r\n    getUserLoggedInDetails = () => {\r\n        // newTweetContent\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[userLoggedInId - 1]\r\n        });\r\n    }\r\n    handleAddClicked = () => {\r\n        // console.log(\"add icon clicked\");\r\n        this.setState({\r\n            showComponent: true,\r\n            handleClicked: true\r\n        });\r\n\r\n    }\r\n\r\n    insertNewTweet = (newTweetComponent) => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const indexOfUserId = this.state.userLoggedInId - 1;\r\n        const currentTweets = getUserDetails[indexOfUserId].tweets.tweet;\r\n        console.log(currentTweets.length);\r\n        console.log(newTweetComponent);\r\n        const newTweet = {\r\n            id: currentTweets.length + 1,\r\n            content: newTweetComponent\r\n        };\r\n        console.log(indexOfUserId);\r\n        // console.log(getUserDetails[indexOfUserId].tweets.tweet);\r\n        currentTweets.unshift(newTweet);\r\n        getUserDetails[indexOfUserId].tweets.tweet = currentTweets;\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[indexOfUserId]\r\n        });\r\n\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            showComponent: false,\r\n            handleClicked: false\r\n        });\r\n        // console.log(\"handleShowModalToggle value :\", this.state.showComponent);\r\n    }\r\n\r\n    getTheNewTweetContent = (newTweetContent) => {\r\n        this.setState({ newTweetContent: newTweetContent })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getUserLoggedInDetails();\r\n\r\n    }\r\n\r\n    handleSignOutClicked = () => {\r\n        // console.log(this.props.handleOptionClicked);\r\n        if (this.props.handleOptionClicked === 'signOutClicked') {\r\n            console.log('hello');\r\n            // this.props.history.push(\"/\");\r\n            // console.log(this.props.history);\r\n            return <Route path=\"/user/home\" to=\"/\" />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.handleSignOutClicked();\r\n        return (\r\n            <div className=\"Home\">\r\n                {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? this.props.history.push(\"/\") : (\r\n                    <>\r\n                        <TweetList getUserDetails={() => this.getUserLoggedInDetails()} user={this.state.userLoggedInDetails} listedTweets={this.props.listedTweets} handleOptionClicked={this.props.handleOptionClicked} />\r\n                        {this.props.listedTweets === 'all' ? <span className=\"addIcon\" onClick={() => this.handleAddClicked()} ><i className=\"fa fa-plus-circle\"></i></span> : ''}\r\n                        {/* <NewTweet /> */}\r\n                        {this.state.handleClicked ? <NewTweet handleShow={this.handleShow} showModalStatus={this.state.handleClicked} insertNewTweet={this.insertNewTweet} /> : null}\r\n                    </>\r\n                )}\r\n                {/*home page*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["104","105"],"import React, { Component } from 'react';\r\nimport TweetRow from './Tweet-row';\r\n\r\nclass TweetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: props.user.displayName,\r\n            userName: props.user.userName,\r\n            favesTweets: props.user.favesTweets,\r\n            tweets: props.user.tweets.tweet,\r\n            listedTweets: props.listedTweets\r\n        }\r\n\r\n        this.handleFaveToggle = this.handleFaveToggle.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //I save the favestweet by tweet id so, I add favetoggle for the target favestweet  \r\n    handleFaveToggle(tweetId) {\r\n        //bring target tweet by id\r\n        //check if tweet in favesTweets and get their index \r\n        //if it's there toggle them ? remove from favestweets : add it to favestweets\r\n        //edit on db to push new favestweets array\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        console.log('faves tweet in state', favesTweets);\r\n        console.log('tweet id', tweetId);\r\n        const tweetIndex = favesTweets.indexOf(tweetId);\r\n        console.log(\"tweet index: \", tweetIndex);\r\n        tweetIndex < 0 ? console.log('not there') : console.log('already there');\r\n        // if (tweetIndex < 0) {\r\n        //     faves.unshift(tweetId)\r\n        // } else {\r\n        //     faves.splice(tweetIndex, 1)\r\n        // }\r\n        tweetIndex < 0 ? favesTweets.unshift(tweetId) : favesTweets.splice(tweetIndex, 1);\r\n        // console.log(\"after if statment :\", favesTweets);\r\n        // this.setState({ favesTweets });\r\n        // console.log(\"state edit: \", this.state.favesTweets);\r\n        // console.log(faves);\r\n        // console.log(tweetIndex);\r\n        // this.setState({ favesTweets: faves });\r\n        this.editFavesTweetsOnDb(favesTweets);\r\n    }\r\n\r\n    editFavesTweetsOnDb = (favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        console.log(\"state: \", favesTweets);\r\n        console.log(\"before edit: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    //to delete specific tweet - by id \r\n    handleDeleteClick = (tweetId) => {\r\n        //bring target tweet by id\r\n        //check if tweet in Tweetslist and get their index \r\n        //check if id store in favestweet list === there ? delete id : skip\r\n        //delete tweets from tweet list \r\n        //edit on db \r\n        const allTweets = this.state.tweets.slice();\r\n        // console.log(\"all tweets: \", allTweets);\r\n        // console.log(\"target tweet id: \", tweetId);\r\n        // const tweetIndex = allTweets.indexOf(allTweets[tweetId - 1]);\r\n        const tweetIndex = allTweets.indexOf(this.getTweet(tweetId));\r\n        // console.log(\"target tweet index: \", tweetIndex);\r\n        // console.log(\"tweet index: \", tweetIndex);\r\n        // tweetIndex > -1 ? console.log('remove', allTweets[tweetIndex].content) : console.log('not there');\r\n        tweetIndex > -1 ? allTweets.splice(tweetIndex, 1) : console.log(\"object\");\r\n        // console.log(allTweets);\r\n\r\n        // //second check if the target tweet in favesTweet\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        const faveTweetIndex = favesTweets.indexOf(this.getTweet(tweetId));\r\n        console.log(faveTweetIndex);\r\n        // tweetIndex < 0 ? console.log(\"skip\") : console.log(\"remove\");\r\n        if (tweetIndex < 0) {\r\n            favesTweets.splice(faveTweetIndex, 1);\r\n        }\r\n\r\n        this.deleteTweetFromDb1(allTweets, favesTweets);\r\n    }\r\n\r\n    deleteTweetFromDb1 = (tweets, favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        //first delete tweet from alltweet list\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        // console.log(\"tweet list before remove: \", getUserDetails[0].tweets.tweet);\r\n        getUserDetails[userId].tweets.tweet = tweets;\r\n        // console.log(\"after edit: \", getUserDetails[0].tweets.tweet);\r\n\r\n        // console.log(\"faves tweets before delete: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        // console.log(\"after faves tweets after delete: \", getUserDetails[userId].favesTweets);\r\n\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        this.setState({ favesTweets });\r\n        // console.log(\"faves tweets in state: \", this.state.favesTweets);\r\n        window.location.reload();\r\n        this.setState({ tweets });\r\n    }\r\n\r\n    getTweet = (tweetId) => {\r\n        let id = 0;\r\n        this.state.tweets.map((element, index) => {\r\n            // console.log(tweetId);\r\n            // console.log(element.id);\r\n\r\n            if (element.id == tweetId) {\r\n                id = element;\r\n                // console.log(\"yes\");\r\n\r\n            }\r\n        });\r\n\r\n        return id;\r\n    }\r\n\r\n    handleOptionClicked = () => {\r\n        const option = this.props.handleOptionClicked;\r\n        if (option === 'deleteAllTweetsClicked') {\r\n            console.log(option);\r\n        } else if (option === 'deleteAllFavesTweetsClicked') {\r\n            console.log(option);\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        this.handleOptionClicked();\r\n        const tweets = this.props.user.tweets.tweet.map((element, index) => {\r\n            if (this.state.favesTweets.includes(element.id)) {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={true} />\r\n                );\r\n            } else {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={false} />);\r\n            }\r\n        })\r\n\r\n        // //the faves tweet saved by id of tweet so, fisrt: we need to get faves tweet id then get these tweet by id\r\n        const favesTweet = this.state.favesTweets.map((favesTweetId, index) => {\r\n            // console.log(favesTweetId, ' ');\r\n            // const getTweet = this.state.tweets[0];\r\n            // console.log(this.getTweet(favesTweetId));\r\n            const getTweet = this.getTweet(favesTweetId);\r\n            // console.log(favesTweetId, ' ');\r\n            if (getTweet !== undefined) {\r\n                // console.log(favesTweetId);\r\n                // console.log(' content ', getTweet.content);\r\n\r\n                return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetContent={getTweet.content} isFave={true} />\r\n                )\r\n            }\r\n            return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} tweetContent={getTweet.content} isFave={true} />\r\n            )\r\n            // console.log(this.props.userLoggedInId);\r\n\r\n        });\r\n        // const favesTweet = ''\r\n\r\n        // console.log(this.state.displayName);\r\n        return (\r\n            // {this.state.tweet1.forEach(element => {\r\n            //     console.log(element.content);\r\n            // })}\r\n            <div className=\"TweetList\" >\r\n                {/* <TweetRow userName={this.state.userName} tweetId={1} tweetContent={this.state.tweet} /> */}\r\n                { this.state.listedTweets === 'all' ? tweets : favesTweet\r\n                }\r\n                {/* {this.state.listedTweets === 'all' ? this.state.favesTweets.length < 0 ? '' : favesTweet : ''} */}\r\n\r\n                {/* {tweets} */}\r\n                {/**<FavesTweets />*/}\r\n                {/* {favesTweet} */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",["106"],"import React, { Component } from 'react';\r\nimport TwitterDB from '../TwitterDB'\r\nimport '../comonents-style/Tweet-row.css'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nclass TweetRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     displayName: 'ashwag',\r\n        //     tweets: []\r\n        // };\r\n        this.handleFavesClick = this.handleFavesClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n    }\r\n    handleFavesClick = () => {\r\n        console.log(\"fave icon clicked\");\r\n        this.props.isFaveToggle(this.props.tweetId)\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        console.log(\"delee icon clicked\");\r\n        this.props.handleDeleteClick(this.props.tweetId)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n        //this.getUserLoggedInDetails();\r\n        // this.getUserLoggedInDetails();\r\n        // console.log(getUserDetails[0].displayName);\r\n        // console.log(this.state.tweets);\r\n        // console.log(this.state.displayName);\r\n        const isFave = (this.props.isFave) ? 'fave' : '';\r\n        // console.log(\"tweet : \" + this.props.tweetContent + ' ' + this.props.isFave);\r\n        return (\r\n            <div className=\"TweetRow\">\r\n                {/* <div className=\"Tweet\">\r\n                    <div className=\"userDetails\">{this.props.userName}</div>\r\n                    <div className=\"container\">{this.props.tweetContent}</div>\r\n                    <div className=\"optionsIcon\">\r\n                        <span>\r\n                            <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                            <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                        </span>\r\n                    </div>\r\n                </div> */}\r\n                <Card className=\"Tweet\">\r\n                    <Card.Header >{this.props.userName}</Card.Header>\r\n                    <Card.Body className=\"container\">\r\n                        <Card.Text>\r\n                            {this.props.tweetContent}\r\n                        </Card.Text>\r\n                        <footer>\r\n                            <span>\r\n                                <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                                <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                            </span>\r\n                        </footer>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["107","108","109","110"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport RegisterForm from './Register-form'\r\nimport '../comonents-style/Header.css'\r\nimport '../comonents-style/Landing-page.css'\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LandingPage\">\r\n                <div className=\"header\">\r\n                    <p>MINI-TWITTER</p>\r\n                    <Button className=\"signIn\" variant=\"primary\" as={Link} to=\"/signIn\">Sign In</Button>\r\n\r\n                </div>\r\n                <Jumbotron>\r\n                    <h1>Welcom to mini-twitter</h1>\r\n                    <p>\r\n                        Join to a simple social now, enjoy writing your tweets and share it with others.\r\n                    </p>\r\n                    <p>\r\n                        <Button variant=\"primary\" as={Link} to=\"/register\">Join Now</Button>\r\n                        {/* <Button variant=\"primary\" as={Link} to=\"/login\">Log In</Button> */}\r\n                    </p>\r\n                </Jumbotron>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["111","112","113","114","115","116","117"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["118","119","120","121","122","123"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    Nav\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Movies from './Movies';\r\nimport News from './News';\r\nimport Quets from './Quets';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Explore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tab1responseData: [],\r\n            tab2responseData: [],\r\n            tab3responseData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bringAxios()\r\n    }\r\n\r\n    // reset = (tabResponseData) => {\r\n    //     this.setState({ responseData: [] })\r\n    // }\r\n    //     // onClick={() => this.bringAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit')}\r\n\r\n    bringAxios = (url, tab) => {\r\n        const limit = 5;\r\n        axios\r\n            .get(`${url}=${limit}`)\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                console.log(tab);\r\n                this.setState({ [tab]: responseData })\r\n                console.log(this.state.tab2responseData);\r\n                // setResponseFilmsData(res, limit);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"Explore container\">\r\n                    <Tabs defaultActiveKey=\"Movies\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Movies\" title=\"Movies\">\r\n                            <Movies responseData={this.state.tab1responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path='/expolre/movies' render={props => <Movies {...props} responseData={this.state.responseData} callBackAxios={this.bringAxios} />} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"News\" title=\"News\" >\r\n                            <News responseData={this.state.tab2responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/news\" component={News} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"quets\" title=\"Quets\">\r\n                            <Quets responseData={this.state.tab3responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/quets\" component={Quets} /> */}\r\n                        </Tab>\r\n                    </Tabs>\r\n                    {/* <Tabs id=\"uncontrolled-tab-example\" defaultActiveKey=\"Movies\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/expolre/movies\" eventKey=\"Movies\" ><i className=\"fa fa-home\"></i>{'  '}Movies</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/quets\" eventKey=\"Quets\" ><i className=\"fa fa-newspaper\"></i>{'  '}Quets</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/news\" eventKey=\"News\"><i className=\"fa fa-star\"></i>{'  '}News</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Route path='/expolre/movies' component={Movies} />\r\n                            <Route path='/explore/quets' component={Quets} />\r\n                            <Route path='/explore/news' component={News} />\r\n                        </Tab.Content>\r\n\r\n                    </Tabs> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explore;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js",["124"],"import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Quets extends Component {\r\n\r\n    componentDidMount() {\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n    }\r\n    render() {\r\n        // const getQuetList = this.props.responseData.map(element => {\r\n        //     console.log(element.title);\r\n        //     return (<AxiosContentRow quetContent={element.description} author={element.director} />);\r\n        // })\r\n        // console.log(this.state.quetsList);\r\n        return (\r\n            <div className=\"Quets\">\r\n                {/* {getQuetList} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quets;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js",["125"],"import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Movies extends Component {\r\n    componentDidMount() {\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n    }\r\n\r\n    render() {\r\n        // const getQuetList = this.props.responseData.map(element => {\r\n        //     console.log(element.title);\r\n        //     return (<AxiosContentRow quetContent={element.description} author={element.director} />);\r\n        // })\r\n        console.log(this.props.responseData);\r\n        return (\r\n            <div className=\"Movies\">\r\n                hello\r\n                {/* {getQuetList} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js",["126"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit', 'tab2responseData');\r\n        // this.setState({ responseData: this.props.responseData })\r\n        // this.bringAxios();\r\n    }\r\n    // bringAxios = () => {\r\n    //     const limit = 5;\r\n    //     axios\r\n    //         .get(`http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit=${limit}`)\r\n    //         .then(response => {\r\n    //             const responseData = response.data.data;\r\n    //             this.setState({ responseData })\r\n    //             // setResponseFilmsData(res, limit);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //         });\r\n    // }\r\n    /**\r\n     * http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports&limit=5&languages=en\r\n     */\r\n    render() {\r\n        // this.props.callBackAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit');\r\n        // console.log(this.props.responseData.length);\r\n        console.log(this.props.responseData);\r\n        // const a = this.props.responseData.data;\r\n        // console.log(a[0]);\r\n        // this.bringAxios();\r\n        let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.data.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.image} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",["127"],"import React, { Component } from 'react';\r\nimport '../comonents-style/AxiosContentRow.css'\r\n\r\nclass AxiosContentRow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AxiosContentRow\">\r\n                {this.props.imgUrl !== null ? <img src={this.props.imgUrl} /> : ''}\r\n                <p>{this.props.title}</p>\r\n                {/* <p>{\" ` \" + this.props.quetContent + \" ` \"}</p> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AxiosContentRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["128","129"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    Popover,\r\n    OverlayTrigger,\r\n    Dropdown\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Explore from './Explore';\r\nimport Search from './Search';\r\nimport '../comonents-style/Header.css'\r\n\r\nclass UserHomePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // deleteAllTweetsClicked: false,\r\n            // deleteAllFavesTweetsClicked: false,\r\n            // signOutClicked: false\r\n            handleTypeClicked: ''\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllFavesTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handlesignOutClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'signOutClicked'\r\n        })\r\n        localStorage.setItem(\"userLoggedInId\", -1)\r\n        console.log(localStorage.getItem(\"userLoggedInId\"));\r\n    }\r\n\r\n    userLoggedInDisplayName = () => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        const userDisplayName = getUserDetails[userLoggedInId - 1].displayName;\r\n        return (<span>{userDisplayName}</span>)\r\n\r\n    }\r\n\r\n    render() {\r\n        //pop up message \r\n        const popover = (\r\n            <Popover>\r\n                {/* <ul>\r\n            <li>My Profile</li>\r\n            <li>Followers</li>\r\n            <li>Sign out</li>\r\n          </ul> */}\r\n                <Dropdown href=\"#/action-1\">\r\n                    <Dropdown>\r\n                        <span>Settings</span>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllTweetsClicked}>Delete All Tweets</Dropdown.Item>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllFavesTweetsClicked}>Delete All Favorite Tweets</Dropdown.Item>\r\n                    </Dropdown>\r\n                    <Dropdown.Item as={Link} to=\"/\" onClick={this.handlesignOutClicked}>Sign out</Dropdown.Item>\r\n                </Dropdown>\r\n            </Popover>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Home\" >\r\n                <div className=\"header header-home\">\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Home\">\r\n                        <Row>\r\n                            <Col sm={3}>\r\n                                <Nav variant=\"pills\" className=\"flex-column\">\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/home\" eventKey=\"Home\" ><i className=\"fa fa-home\"></i>{'  '}Home</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/explore\" eventKey=\"Explore\" ><i className=\"fa fa-newspaper\"></i>{'  '}News</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/favesTweets\" eventKey=\"favesTweets\"><i className=\"fa fa-star\"></i>{'  '}favesTweets</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/user/search\" eventKey=\"search\"><i className=\"fa fa-search\"></i>{'  '}search</Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            </Col>\r\n                            <Col sm={9}>\r\n                                <div>\r\n                                    {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? '' : this.userLoggedInDisplayName()\r\n                                    }\r\n                                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                                        <span className=\"options\">\r\n                                            <i className=\"fa fa-bars\">\r\n                                            </i>\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <Tab.Content>\r\n                                    {/* <Tab.Pane eventKey=\"Home\">\r\n                                    <Route path='/user/home' render={props => <Home {...props} />} />\r\n                                </Tab.Pane> */}\r\n                                    {/* <Tab.Pane eventKey=\"second\">\r\n                    <Route path='/news' component={News} />\r\n                  </Tab.Pane> */}\r\n                                    <Route path='/user/home' render={props => <Home {...props} listedTweets='all' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                    <Route path='/user/explore' component={Explore} />\r\n                                    <Route path='/user/favesTweets' render={props => <Home {...props} listedTweets='favesTweets' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                    <Route path='/user/search' component={Search} />\r\n                                </Tab.Content>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab.Container>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHomePage;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["130"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js",["131","132","133","134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":5,"column":3,"nodeType":"144","messageId":"145","endLine":5,"endColumn":9},{"ruleId":"142","severity":1,"message":"146","line":7,"column":3,"nodeType":"144","messageId":"145","endLine":7,"endColumn":7},{"ruleId":"142","severity":1,"message":"147","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":12},{"ruleId":"142","severity":1,"message":"148","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":15},{"ruleId":"142","severity":1,"message":"149","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"142","severity":1,"message":"150","line":15,"column":3,"nodeType":"144","messageId":"145","endLine":15,"endColumn":6},{"ruleId":"142","severity":1,"message":"151","line":16,"column":3,"nodeType":"144","messageId":"145","endLine":16,"endColumn":6},{"ruleId":"142","severity":1,"message":"152","line":17,"column":3,"nodeType":"144","messageId":"145","endLine":17,"endColumn":6},{"ruleId":"142","severity":1,"message":"153","line":18,"column":3,"nodeType":"144","messageId":"145","endLine":18,"endColumn":6},{"ruleId":"142","severity":1,"message":"154","line":19,"column":3,"nodeType":"144","messageId":"145","endLine":19,"endColumn":10},{"ruleId":"142","severity":1,"message":"155","line":20,"column":3,"nodeType":"144","messageId":"145","endLine":20,"endColumn":17},{"ruleId":"142","severity":1,"message":"156","line":21,"column":3,"nodeType":"144","messageId":"145","endLine":21,"endColumn":11},{"ruleId":"142","severity":1,"message":"157","line":30,"column":8,"nodeType":"144","messageId":"145","endLine":30,"endColumn":17},{"ruleId":"142","severity":1,"message":"158","line":34,"column":8,"nodeType":"144","messageId":"145","endLine":34,"endColumn":12},{"ruleId":"142","severity":1,"message":"159","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":119,"column":48,"nodeType":"162","messageId":"163","endLine":119,"endColumn":50},{"ruleId":"164","severity":1,"message":"165","line":123,"column":28,"nodeType":"166","messageId":"167","endLine":123,"endColumn":30},{"ruleId":"142","severity":1,"message":"157","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":17},{"ruleId":"142","severity":1,"message":"168","line":4,"column":22,"nodeType":"144","messageId":"145","endLine":4,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":5,"column":5,"nodeType":"144","messageId":"145","endLine":5,"endColumn":11},{"ruleId":"142","severity":1,"message":"169","line":6,"column":5,"nodeType":"144","messageId":"145","endLine":6,"endColumn":10},{"ruleId":"142","severity":1,"message":"170","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":10,"column":5,"nodeType":"144","messageId":"145","endLine":10,"endColumn":9},{"ruleId":"142","severity":1,"message":"159","line":11,"column":5,"nodeType":"144","messageId":"145","endLine":11,"endColumn":13},{"ruleId":"142","severity":1,"message":"169","line":12,"column":5,"nodeType":"144","messageId":"145","endLine":12,"endColumn":10},{"ruleId":"142","severity":1,"message":"147","line":14,"column":8,"nodeType":"144","messageId":"145","endLine":14,"endColumn":12},{"ruleId":"142","severity":1,"message":"171","line":52,"column":16,"nodeType":"144","messageId":"145","endLine":52,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":119,"column":51,"nodeType":"166","messageId":"167","endLine":119,"endColumn":53},{"ruleId":"160","severity":1,"message":"161","line":134,"column":51,"nodeType":"162","messageId":"163","endLine":134,"endColumn":53},{"ruleId":"142","severity":1,"message":"151","line":5,"column":5,"nodeType":"144","messageId":"145","endLine":5,"endColumn":8},{"ruleId":"142","severity":1,"message":"152","line":6,"column":5,"nodeType":"144","messageId":"145","endLine":6,"endColumn":8},{"ruleId":"142","severity":1,"message":"153","line":7,"column":5,"nodeType":"144","messageId":"145","endLine":7,"endColumn":8},{"ruleId":"142","severity":1,"message":"143","line":11,"column":5,"nodeType":"144","messageId":"145","endLine":11,"endColumn":11},{"ruleId":"142","severity":1,"message":"169","line":12,"column":5,"nodeType":"144","messageId":"145","endLine":12,"endColumn":10},{"ruleId":"142","severity":1,"message":"146","line":13,"column":5,"nodeType":"144","messageId":"145","endLine":13,"endColumn":9},{"ruleId":"142","severity":1,"message":"172","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":23},{"ruleId":"142","severity":1,"message":"172","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":23},{"ruleId":"142","severity":1,"message":"173","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":8,"column":47,"nodeType":"176","endLine":8,"endColumn":78},{"ruleId":"142","severity":1,"message":"168","line":12,"column":22,"nodeType":"144","messageId":"145","endLine":12,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":13,"column":5,"nodeType":"144","messageId":"145","endLine":13,"endColumn":11},{"ruleId":"142","severity":1,"message":"177","line":2,"column":25,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"146","line":10,"column":5,"nodeType":"144","messageId":"145","endLine":10,"endColumn":9},{"ruleId":"142","severity":1,"message":"159","line":11,"column":5,"nodeType":"144","messageId":"145","endLine":11,"endColumn":13},{"ruleId":"142","severity":1,"message":"169","line":12,"column":5,"nodeType":"144","messageId":"145","endLine":12,"endColumn":10},{"ruleId":"142","severity":1,"message":"147","line":14,"column":8,"nodeType":"144","messageId":"145","endLine":14,"endColumn":12},{"ruleId":"164","severity":1,"message":"165","line":100,"column":51,"nodeType":"166","messageId":"167","endLine":100,"endColumn":53},{"ruleId":"160","severity":1,"message":"178","line":107,"column":51,"nodeType":"162","messageId":"179","endLine":107,"endColumn":53},{"ruleId":"164","severity":1,"message":"165","line":108,"column":42,"nodeType":"166","messageId":"167","endLine":108,"endColumn":44},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'News' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'RegisterForm' is defined but never used.","'newUser' is assigned a value but never used.","'AxiosContentRow' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]