[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"17"},{"size":562,"mtime":1610366181316,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":3895,"mtime":1610529252437,"results":"21","hashOfConfig":"19"},{"size":3937,"mtime":1610562205384,"results":"22","hashOfConfig":"19"},{"size":243,"mtime":1610134991880,"results":"23","hashOfConfig":"19"},{"size":8560,"mtime":1610555791060,"results":"24","hashOfConfig":"19"},{"size":1871,"mtime":1610518893900,"results":"25","hashOfConfig":"19"},{"size":1429,"mtime":1610563126235,"results":"26","hashOfConfig":"19"},{"size":11509,"mtime":1610487131941,"results":"27","hashOfConfig":"19"},{"size":5057,"mtime":1610350884562,"results":"28","hashOfConfig":"19"},{"size":3367,"mtime":1610430903359,"results":"29","hashOfConfig":"19"},{"size":689,"mtime":1610431038552,"results":"30","hashOfConfig":"19"},{"size":692,"mtime":1610430883559,"results":"31","hashOfConfig":"19"},{"size":639,"mtime":1610430924430,"results":"32","hashOfConfig":"19"},{"size":357,"mtime":1610401365817,"results":"33","hashOfConfig":"19"},{"size":5017,"mtime":1610562218420,"results":"34","hashOfConfig":"19"},{"size":2314,"mtime":1610530762450,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8zyv1d",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["77","78"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Explore from './components/Explore';\nimport Search from './components/Search';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Tab,\n  Row,\n  Col,\n  Nav,\n  Popover,\n  OverlayTrigger,\n  Dropdown\n} from 'react-bootstrap'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Nav from 'react-bootstrap/Nav'\n// import Popover from 'react-bootstrap/Popover'\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport 'font-awesome/css/font-awesome.min.css';\nimport TwitterDB from './TwitterDB'\nimport LandingPage from './components/Landing-page';\nimport RegisterForm from './components/Register-form';\nimport UserHomePage from './components/UserHomePage';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: \"\"\n    }\n  }\n  componentDidMount() {\n    if (localStorage.getItem('TwitterDB') === null) {\n      console.log('empty');\n      localStorage.setItem('TwitterDB', [])\n    } else {\n      console.log('not empty');\n    }\n  }\n  render() {\n\n    \n\n    return (\n      <Router>\n        <div className=\"App\">\n         \n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path='/register' component={RegisterForm} />\n\n          {/* <Link to='/'>Home</Link> {' || '}\n          <Link to='/news'>News</Link> {' || '}\n          <Link to='/search'>Search</Link> {' || '}\n          <Link to='/favesTweets'>FavesTweets</Link> */}\n\n          {/* <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Home\">\n            <Row>\n              <Col sm={3}>\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/home\" eventKey=\"Home\" ><i className=\"fa fa-home\"></i>{'  '}Home</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/explore\" eventKey=\"Explore\" ><i className=\"fa fa-newspaper\"></i>{'  '}Explore</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/favesTweets\" eventKey=\"favesTweets\"><i className=\"fa fa-star\"></i>{'  '}favesTweets</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/search\" eventKey=\"search\"><i className=\"fa fa-search\"></i>{'  '}search</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </Col>\n              <Col sm={9}>\n                <Tab.Content>\n                  {/* <Tab.Pane eventKey=\"News\">\n                    <Route exact path='/' component={Home} />hhh\n                     </Tab.Pane>\n                  <Tab.Pane eventKey=\"second\">\n                    <Route path='/news' component={News} />\n                  </Tab.Pane>\n                  <Route path='/home' render={props => <Home {...props} />} />\n                  <Route path='/explore' component={Explore} />\n                  <Route path='/search' component={Search} />\n                  <Route path='/favesTweets' component={FavesTweets} />\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </div>\n        <Route path='/home' component={Home} /> */}\n          <Route path='/user' component={UserHomePage} />\n          {/* <Route path='/user/home' render={props => <Home {...props} />} /> */}\n          {/* <Route path='/user/explore' component={Explore} /> */}\n          {/* <Route path='/user/search' component={Search} /> */}\n          {/* <Route path='/user/favesTweets' component={FavesTweets} /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["92","93"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["94","95"],"import React, { Component } from 'react';\r\nimport TweetRow from './Tweet-row';\r\n\r\nclass TweetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: props.user.displayName,\r\n            userName: props.user.userName,\r\n            favesTweets: props.user.favesTweets,\r\n            tweets: props.user.tweets.tweet,\r\n            listedTweets: props.listedTweets\r\n        }\r\n\r\n        this.handleFaveToggle = this.handleFaveToggle.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //I save the favestweet by tweet id so, I add favetoggle for the target favestweet  \r\n    handleFaveToggle(tweetId) {\r\n        //bring target tweet by id\r\n        //check if tweet in favesTweets and get their index \r\n        //if it's there toggle them ? remove from favestweets : add it to favestweets\r\n        //edit on db to push new favestweets array\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        console.log('faves tweet in state', favesTweets);\r\n        console.log('tweet id', tweetId);\r\n        const tweetIndex = favesTweets.indexOf(tweetId);\r\n        console.log(\"tweet index: \", tweetIndex);\r\n        tweetIndex < 0 ? console.log('not there') : console.log('already there');\r\n        // if (tweetIndex < 0) {\r\n        //     faves.unshift(tweetId)\r\n        // } else {\r\n        //     faves.splice(tweetIndex, 1)\r\n        // }\r\n        tweetIndex < 0 ? favesTweets.unshift(tweetId) : favesTweets.splice(tweetIndex, 1);\r\n        // console.log(\"after if statment :\", favesTweets);\r\n        // this.setState({ favesTweets });\r\n        // console.log(\"state edit: \", this.state.favesTweets);\r\n        // console.log(faves);\r\n        // console.log(tweetIndex);\r\n        // this.setState({ favesTweets: faves });\r\n        this.editFavesTweetsOnDb(favesTweets);\r\n    }\r\n\r\n    editFavesTweetsOnDb = (favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        console.log(\"state: \", favesTweets);\r\n        console.log(\"before edit: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    //to delete specific tweet - by id \r\n    handleDeleteClick = (tweetId) => {\r\n        //bring target tweet by id\r\n        //check if tweet in Tweetslist and get their index \r\n        //check if id store in favestweet list === there ? delete id : skip\r\n        //delete tweets from tweet list \r\n        //edit on db \r\n        const allTweets = this.state.tweets.slice();\r\n        // console.log(\"all tweets: \", allTweets);\r\n        // console.log(\"target tweet id: \", tweetId);\r\n        // const tweetIndex = allTweets.indexOf(allTweets[tweetId - 1]);\r\n        const tweetIndex = allTweets.indexOf(this.getTweet(tweetId));\r\n        // console.log(\"target tweet index: \", tweetIndex);\r\n        // console.log(\"tweet index: \", tweetIndex);\r\n        // tweetIndex > -1 ? console.log('remove', allTweets[tweetIndex].content) : console.log('not there');\r\n        tweetIndex > -1 ? allTweets.splice(tweetIndex, 1) : console.log(\"object\");\r\n        // console.log(allTweets);\r\n\r\n        // //second check if the target tweet in favesTweet\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        const faveTweetIndex = favesTweets.indexOf(this.getTweet(tweetId));\r\n        console.log(faveTweetIndex);\r\n        // tweetIndex < 0 ? console.log(\"skip\") : console.log(\"remove\");\r\n        if (tweetIndex < 0) {\r\n            favesTweets.splice(faveTweetIndex, 1);\r\n        }\r\n\r\n        this.deleteTweetFromDb1(allTweets, favesTweets);\r\n    }\r\n\r\n    deleteTweetFromDb1 = (tweets, favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        //first delete tweet from alltweet list\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        // console.log(\"tweet list before remove: \", getUserDetails[0].tweets.tweet);\r\n        getUserDetails[userId].tweets.tweet = tweets;\r\n        // console.log(\"after edit: \", getUserDetails[0].tweets.tweet);\r\n\r\n        // console.log(\"faves tweets before delete: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        // console.log(\"after faves tweets after delete: \", getUserDetails[userId].favesTweets);\r\n\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        this.setState({ favesTweets });\r\n        // console.log(\"faves tweets in state: \", this.state.favesTweets);\r\n        window.location.reload();\r\n        this.setState({ tweets });\r\n    }\r\n\r\n    getTweet = (tweetId) => {\r\n        let id = 0;\r\n        this.state.tweets.map((element, index) => {\r\n            // console.log(tweetId);\r\n            // console.log(element.id);\r\n\r\n            if (element.id == tweetId) {\r\n                id = element;\r\n                // console.log(\"yes\");\r\n\r\n            }\r\n        });\r\n\r\n        return id;\r\n    }\r\n\r\n    handleOptionClicked = () => {\r\n        const option = this.props.handleOptionClicked;\r\n        if (option === 'deleteAllTweetsClicked') {\r\n            console.log(option);\r\n        } else if (option === 'deleteAllFavesTweetsClicked') {\r\n            console.log(option);\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        this.handleOptionClicked();\r\n        const tweets = this.props.user.tweets.tweet.map((element, index) => {\r\n            if (this.state.favesTweets.includes(element.id)) {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={true} />\r\n                );\r\n            } else {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={false} />);\r\n            }\r\n        })\r\n\r\n        // //the faves tweet saved by id of tweet so, fisrt: we need to get faves tweet id then get these tweet by id\r\n        const favesTweet = this.state.favesTweets.map((favesTweetId, index) => {\r\n            // console.log(favesTweetId, ' ');\r\n            // const getTweet = this.state.tweets[0];\r\n            // console.log(this.getTweet(favesTweetId));\r\n            const getTweet = this.getTweet(favesTweetId);\r\n            // console.log(favesTweetId, ' ');\r\n            if (getTweet !== undefined) {\r\n                // console.log(favesTweetId);\r\n                // console.log(' content ', getTweet.content);\r\n\r\n                return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetContent={getTweet.content} isFave={true} />\r\n                )\r\n            }\r\n            return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} tweetContent={getTweet.content} isFave={true} />\r\n            )\r\n            // console.log(this.props.userLoggedInId);\r\n\r\n        });\r\n        // const favesTweet = ''\r\n\r\n        // console.log(this.state.displayName);\r\n        return (\r\n            // {this.state.tweet1.forEach(element => {\r\n            //     console.log(element.content);\r\n            // })}\r\n            <div className=\"TweetList\" >\r\n                {/* <TweetRow userName={this.state.userName} tweetId={1} tweetContent={this.state.tweet} /> */}\r\n                { this.state.listedTweets === 'all' ? tweets : favesTweet\r\n                }\r\n                {/* {this.state.listedTweets === 'all' ? this.state.favesTweets.length < 0 ? '' : favesTweet : ''} */}\r\n\r\n                {/* {tweets} */}\r\n                {/**<FavesTweets />*/}\r\n                {/* {favesTweet} */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",["96"],"import React, { Component } from 'react';\r\nimport TwitterDB from '../TwitterDB'\r\nimport '../comonents-style/Tweet-row.css'\r\n\r\nclass TweetRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     displayName: 'ashwag',\r\n        //     tweets: []\r\n        // };\r\n        this.handleFavesClick = this.handleFavesClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n    }\r\n    handleFavesClick = () => {\r\n        console.log(\"fave icon clicked\");\r\n        this.props.isFaveToggle(this.props.tweetId)\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        console.log(\"delee icon clicked\");\r\n        this.props.handleDeleteClick(this.props.tweetId)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n        //this.getUserLoggedInDetails();\r\n        // this.getUserLoggedInDetails();\r\n        // console.log(getUserDetails[0].displayName);\r\n        // console.log(this.state.tweets);\r\n        // console.log(this.state.displayName);\r\n        const isFave = (this.props.isFave) ? 'fave' : '';\r\n        // console.log(\"tweet : \" + this.props.tweetContent + ' ' + this.props.isFave);\r\n        return (\r\n            <div className=\"TweetRow\">\r\n                <div className=\"Tweet\">\r\n                    <div className=\"userDetails\">{this.props.userName}</div>\r\n                    <div className=\"container\">{this.props.tweetContent}</div>\r\n                    <div className=\"optionsIcon\">\r\n                        <span>\r\n                            <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                            <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["97","98","99","100"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["101","102","103","104","105","106","107","108"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert\r\n} from 'react-bootstrap'\r\n\r\nimport {\r\n    Link,\r\n    Redirect,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Home from './Home';\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alert: false\r\n\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.userLoggedId();\r\n\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.userLoggedId();\r\n    // }\r\n\r\n    userLoggedId = () => {\r\n        if (localStorage.getItem('TwitterDB') == '') {\r\n            this.setState({\r\n                userId: 1\r\n\r\n            })\r\n        } else {\r\n            const TwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n            this.setState({\r\n                userId: TwitterDB.length + 1\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    register = (e) => {\r\n        e.preventDefault();\r\n\r\n        //get db from local storage\r\n        //convert from string to json\r\n        //check if it's empty\r\n        //push the new user \r\n        //set new db to local storage and convert db from json to string\r\n        // if (validation()) {\r\n        let getTwitterDB;\r\n        let userId;\r\n\r\n        if (localStorage.getItem('TwitterDB') == '') {\r\n            console.log(\"object\");\r\n            let arrOfObject = [];\r\n            userId = 1;\r\n            const newUser = this.getNewUser(userId);\r\n            localStorage.setItem('userLoggedInId', userId)\r\n            // this.setState({ userId })\r\n            //getTwitterDB = localStorage.getItem('TwitterDB');\r\n            arrOfObject.push(newUser);\r\n            // if (getTwitterDB === '') {\r\n            //     console.log('object');\r\n            // }\r\n            // let arrOfObject = [];\r\n            // arrOfObject.push(getTwitterDB);\r\n            console.log(arrOfObject);\r\n            localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject))\r\n        }\r\n        else {\r\n            getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n            // if (getTwitterDB[0] === '') {\r\n            //     getTwitterDB.shift(0);\r\n            //     console.log(\"donw\");\r\n            // }\r\n            //console.log(getTwitterDB.length);\r\n            userId = getTwitterDB.length + 1;\r\n            localStorage.setItem('userLoggedInId', userId)\r\n            const newUser = this.getNewUser(userId)\r\n            this.setState({ userId })\r\n            getTwitterDB.push(newUser);\r\n            console.log(getTwitterDB);\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getTwitterDB));\r\n        }\r\n        // this.validation();\r\n        // const newUser = {\r\n        //     \"id\": this.state.userId + 1,\r\n        //     \"userName\": this.state.userName,\r\n        //     \"displayName\": this.state.displayName,\r\n        //     \"email\": this.state.email,\r\n        //     \"password\": this.state.password,\r\n        //     \"tweets\": {\r\n        //         \"tweet\": [\r\n        //             {\r\n        //                 \"id\": 1,\r\n        //                 \"content\": \"Hello, this my fisrt tweet\",\r\n        //                 \"send_time\": \"2021-01-10 10:00:00 AM\"\r\n        //             },\r\n        //             {\r\n        //                 \"id\": 2,\r\n        //                 \"content\": \"Good morning\",\r\n        //                 \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n        //             }\r\n        //         ]\r\n        //     },\r\n        //     \"favesTweets\": [],\r\n        //     \"intersetedTopics\": [],\r\n        //     \"followers\": [],\r\n        //     \"log_in\": false\r\n        // }\r\n        // arrOfObject.push(newUser);\r\n        // //getTwitterDB.push(newUser)\r\n        // //store the db in local storage - stringify : to convert json to string\r\n        // localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject));\r\n        // //to read json from local storage - 1/ get item 2/convert it from string to json\r\n        // //let b = JSON.parse(localStorage.getItem('notes'))\r\n        // TwitterDB.users.push(newUser)\r\n        console.log(this.state.TwitterDB);\r\n        // this.setState({ userId: userId })\r\n        return <Redirect from=\"/register\" to=\"/user/home\" />\r\n        // return <Redirect from=\"/register\" render={(props) => <Home state=\"Hello, \" {...props} />} />\r\n        // return <Redirect from=\"/register\" to={{\r\n        //     pathname: \"/user/home\",\r\n        //     key: userId\r\n        // }} />\r\n\r\n        // />\r\n\r\n\r\n        // }\r\n        //this.validation();\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.userLoggedId()\r\n    // }\r\n    // userLoggedId = (id) => {\r\n    //     this.setState({ userId: id })\r\n\r\n    // }\r\n    getNewUser = (id) => {\r\n        this.userLoggedId();\r\n        console.log(this.state.displayName);\r\n        console.log(this.state.userName);\r\n        console.log(id);\r\n        this.setState({\r\n            userId: id\r\n        })\r\n        console.log(this.state.userId);\r\n        let newUser = {};\r\n        return newUser = {\r\n            \"id\": id,\r\n            \"userName\": this.state.userName,\r\n            \"displayName\": this.state.displayName,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"tweets\": {\r\n                \"tweet\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"content\": \"Hello, this my fisrt tweet\",\r\n                        \"send_time\": \"2021-01-10 10:00:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"content\": \"Good morning\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"content\": \"Good afternoon\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"content\": \"hello\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 5,\r\n                        \"content\": \"TEST1\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 6,\r\n                        \"content\": \"test2\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 7,\r\n                        \"content\": \"ashwag\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 8,\r\n                        \"content\": \"SEI-14\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 9,\r\n                        \"content\": \"today\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 10,\r\n                        \"content\": \"today\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    }\r\n                ]\r\n            },\r\n            \"favesTweets\": [],\r\n            \"intersetedTopics\": [],\r\n            \"followers\": [],\r\n            \"log_in\": false\r\n        }\r\n    }\r\n\r\n\r\n    validation = (fieldName, value) => {\r\n        //check if user name already used\r\n        //check if email already used\r\n        //check if password less than 6 digit\r\n        let key = 'id';\r\n        console.log(fieldName);\r\n        const TwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        TwitterDB.map((element) => {\r\n            if (element[fieldName] === value) {\r\n                // console.log(element[fieldName]);\r\n                console.log(\"problem\");\r\n                this.setState({ alert: true })\r\n                // console.log(value);\r\n            } else {\r\n                this.setState({ alert: false })\r\n            }\r\n            //console.log(element[key]);\r\n            // return false;\r\n\r\n            //console.log(element);\r\n        });\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n        // console.log(this.state.[fieldName]);\r\n        // console.log(fieldName);\r\n\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        // if (this.state.userId <= (getTwitterDB.length + 1)) {\r\n        //     this.setState({\r\n        //         userId: getTwitterDB.length + 1\r\n        //     })\r\n        // }\r\n        if (fieldName !== 'password') {\r\n            this.validation(fieldName, event.target.value);\r\n        }\r\n    }\r\n\r\n    alertMessage = (key) => {\r\n        let alertValue = '';\r\n        if (key === 'userName') {\r\n            alertValue = 'The user name already used';\r\n        } else if (key === 'email') {\r\n            alertValue = 'The email already registered';\r\n        }\r\n        else if (key === 'password') {\r\n            if (this.state.password.length < 6) {\r\n                alertValue = 'The password must be less than 6 digit';\r\n            }\r\n        }\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"RegisterForm\" >\r\n                {this.state.alert ? this.alertMessage() : ''}\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <legend>User Information</legend>\r\n                        <Form.Group>\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <input type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Display Name</Form.Label>\r\n                            <input type=\"text\" name=\"displayName\" value={this.state.displayName} placeholder=\"Enter display name\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <input type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>password</Form.Label>\r\n                            <input name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <button className=\"primary\" type=\"submit\" onClick={this.register}><Link to={{\r\n                            pathname: \"/user/home\",\r\n                            state: { \"userId\": this.state.userId + 1 }\r\n                        }}>Register</Link></button>\r\n                    </fieldset>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["109","110","111","112"],"import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    Nav\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Movies from './Movies';\r\nimport News from './News';\r\nimport Quets from './Quets';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Explore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n\r\n    bringAxios = (url) => {\r\n        const limit = 5;\r\n        axios\r\n            .get(`${url}=${limit}`)\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                this.setState({ responseData })\r\n                // setResponseFilmsData(res, limit);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"Explore container\">\r\n                    <Tabs defaultActiveKey=\"Movies\" id=\"uncontrolled-tab-example\">\r\n                        <Tab as={Link} to=\"/expolre/movies\" eventKey=\"Movies\" title=\"Movies\">\r\n                            <Movies responseData={this.state.responseData} callBackAxios={this.bringAxios} />\r\n                            <Route path='/expolre/movies' component={Movies} />\r\n                        </Tab>\r\n                        <Tab as={Link} to=\"/explore/quets\" eventKey=\"quets\" title=\"Quets\">\r\n                            <Quets responseData={this.state.responseData} callBackAxios={this.bringAxios} />\r\n                            <Route path=\"/explore/quets\" component={Quets} />\r\n                        </Tab>\r\n                        <Tab eventKey=\"News\" title=\"News\">\r\n                            <News responseData={this.state.responseData} callBackAxios={this.bringAxios} />\r\n                            <Route path=\"/explore/news\" component={News} />\r\n                        </Tab>\r\n                    </Tabs>\r\n                    {/* <Tabs id=\"uncontrolled-tab-example\" defaultActiveKey=\"Movies\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/expolre/movies\" eventKey=\"Movies\" ><i className=\"fa fa-home\"></i>{'  '}Movies</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/quets\" eventKey=\"Quets\" ><i className=\"fa fa-newspaper\"></i>{'  '}Quets</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/news\" eventKey=\"News\"><i className=\"fa fa-star\"></i>{'  '}News</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Route path='/expolre/movies' component={Movies} />\r\n                            <Route path='/explore/quets' component={Quets} />\r\n                            <Route path='/explore/news' component={News} />\r\n                        </Tab.Content>\r\n\r\n                    </Tabs> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explore;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["113","114"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["115"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":9},{"ruleId":"120","severity":1,"message":"124","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":7},{"ruleId":"120","severity":1,"message":"125","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":12},{"ruleId":"120","severity":1,"message":"126","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":15},{"ruleId":"120","severity":1,"message":"127","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":14},{"ruleId":"120","severity":1,"message":"128","line":15,"column":3,"nodeType":"122","messageId":"123","endLine":15,"endColumn":6},{"ruleId":"120","severity":1,"message":"129","line":16,"column":3,"nodeType":"122","messageId":"123","endLine":16,"endColumn":6},{"ruleId":"120","severity":1,"message":"130","line":17,"column":3,"nodeType":"122","messageId":"123","endLine":17,"endColumn":6},{"ruleId":"120","severity":1,"message":"131","line":18,"column":3,"nodeType":"122","messageId":"123","endLine":18,"endColumn":6},{"ruleId":"120","severity":1,"message":"132","line":19,"column":3,"nodeType":"122","messageId":"123","endLine":19,"endColumn":10},{"ruleId":"120","severity":1,"message":"133","line":20,"column":3,"nodeType":"122","messageId":"123","endLine":20,"endColumn":17},{"ruleId":"120","severity":1,"message":"134","line":21,"column":3,"nodeType":"122","messageId":"123","endLine":21,"endColumn":11},{"ruleId":"120","severity":1,"message":"135","line":30,"column":8,"nodeType":"122","messageId":"123","endLine":30,"endColumn":17},{"ruleId":"120","severity":1,"message":"136","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":18},{"ruleId":"120","severity":1,"message":"137","line":94,"column":17,"nodeType":"122","messageId":"123","endLine":94,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":119,"column":48,"nodeType":"140","messageId":"141","endLine":119,"endColumn":50},{"ruleId":"142","severity":1,"message":"143","line":123,"column":28,"nodeType":"144","messageId":"145","endLine":123,"endColumn":30},{"ruleId":"120","severity":1,"message":"135","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"146","line":4,"column":22,"nodeType":"122","messageId":"123","endLine":4,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":5,"column":5,"nodeType":"122","messageId":"123","endLine":5,"endColumn":11},{"ruleId":"120","severity":1,"message":"147","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":6,"endColumn":10},{"ruleId":"120","severity":1,"message":"148","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":20},{"ruleId":"120","severity":1,"message":"147","line":10,"column":5,"nodeType":"122","messageId":"123","endLine":10,"endColumn":10},{"ruleId":"120","severity":1,"message":"125","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":12},{"ruleId":"142","severity":1,"message":"143","line":41,"column":47,"nodeType":"144","messageId":"145","endLine":41,"endColumn":49},{"ruleId":"142","severity":1,"message":"143","line":68,"column":47,"nodeType":"144","messageId":"145","endLine":68,"endColumn":49},{"ruleId":"120","severity":1,"message":"149","line":166,"column":16,"nodeType":"122","messageId":"123","endLine":166,"endColumn":23},{"ruleId":"120","severity":1,"message":"150","line":238,"column":13,"nodeType":"122","messageId":"123","endLine":238,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":241,"column":33,"nodeType":"140","messageId":"141","endLine":241,"endColumn":35},{"ruleId":"120","severity":1,"message":"151","line":266,"column":15,"nodeType":"122","messageId":"123","endLine":266,"endColumn":27},{"ruleId":"120","severity":1,"message":"129","line":5,"column":5,"nodeType":"122","messageId":"123","endLine":5,"endColumn":8},{"ruleId":"120","severity":1,"message":"130","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":6,"endColumn":8},{"ruleId":"120","severity":1,"message":"131","line":7,"column":5,"nodeType":"122","messageId":"123","endLine":7,"endColumn":8},{"ruleId":"120","severity":1,"message":"121","line":11,"column":5,"nodeType":"122","messageId":"123","endLine":11,"endColumn":11},{"ruleId":"120","severity":1,"message":"146","line":12,"column":22,"nodeType":"122","messageId":"123","endLine":12,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":13,"column":5,"nodeType":"122","messageId":"123","endLine":13,"endColumn":11},{"ruleId":"120","severity":1,"message":"152","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":29},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'Redirect' is defined but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'RegisterForm' is defined but never used.","'newUser' is assigned a value but never used.","'key' is assigned a value but never used.","'getTwitterDB' is assigned a value but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]