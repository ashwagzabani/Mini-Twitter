[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"17","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js":"18"},{"size":562,"mtime":1610366181316,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":4107,"mtime":1610621800075,"results":"22","hashOfConfig":"20"},{"size":4011,"mtime":1610606802922,"results":"23","hashOfConfig":"20"},{"size":243,"mtime":1610134991880,"results":"24","hashOfConfig":"20"},{"size":8560,"mtime":1610555791060,"results":"25","hashOfConfig":"20"},{"size":1871,"mtime":1610518893900,"results":"26","hashOfConfig":"20"},{"size":1144,"mtime":1610621864323,"results":"27","hashOfConfig":"20"},{"size":11194,"mtime":1610622243003,"results":"28","hashOfConfig":"20"},{"size":5057,"mtime":1610350884562,"results":"29","hashOfConfig":"20"},{"size":3943,"mtime":1610615765396,"results":"30","hashOfConfig":"20"},{"size":712,"mtime":1610612179851,"results":"31","hashOfConfig":"20"},{"size":738,"mtime":1610613642744,"results":"32","hashOfConfig":"20"},{"size":2373,"mtime":1610619155203,"results":"33","hashOfConfig":"20"},{"size":496,"mtime":1610618285939,"results":"34","hashOfConfig":"20"},{"size":5003,"mtime":1610621755475,"results":"35","hashOfConfig":"20"},{"size":2314,"mtime":1610530762450,"results":"36","hashOfConfig":"20"},{"size":4755,"mtime":1610622628309,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8zyv1d",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["79","80"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["95"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["96","97"],"import React, { Component } from 'react';\r\nimport TweetRow from './Tweet-row';\r\n\r\nclass TweetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: props.user.displayName,\r\n            userName: props.user.userName,\r\n            favesTweets: props.user.favesTweets,\r\n            tweets: props.user.tweets.tweet,\r\n            listedTweets: props.listedTweets\r\n        }\r\n\r\n        this.handleFaveToggle = this.handleFaveToggle.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //I save the favestweet by tweet id so, I add favetoggle for the target favestweet  \r\n    handleFaveToggle(tweetId) {\r\n        //bring target tweet by id\r\n        //check if tweet in favesTweets and get their index \r\n        //if it's there toggle them ? remove from favestweets : add it to favestweets\r\n        //edit on db to push new favestweets array\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        console.log('faves tweet in state', favesTweets);\r\n        console.log('tweet id', tweetId);\r\n        const tweetIndex = favesTweets.indexOf(tweetId);\r\n        console.log(\"tweet index: \", tweetIndex);\r\n        tweetIndex < 0 ? console.log('not there') : console.log('already there');\r\n        // if (tweetIndex < 0) {\r\n        //     faves.unshift(tweetId)\r\n        // } else {\r\n        //     faves.splice(tweetIndex, 1)\r\n        // }\r\n        tweetIndex < 0 ? favesTweets.unshift(tweetId) : favesTweets.splice(tweetIndex, 1);\r\n        // console.log(\"after if statment :\", favesTweets);\r\n        // this.setState({ favesTweets });\r\n        // console.log(\"state edit: \", this.state.favesTweets);\r\n        // console.log(faves);\r\n        // console.log(tweetIndex);\r\n        // this.setState({ favesTweets: faves });\r\n        this.editFavesTweetsOnDb(favesTweets);\r\n    }\r\n\r\n    editFavesTweetsOnDb = (favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        console.log(\"state: \", favesTweets);\r\n        console.log(\"before edit: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    //to delete specific tweet - by id \r\n    handleDeleteClick = (tweetId) => {\r\n        //bring target tweet by id\r\n        //check if tweet in Tweetslist and get their index \r\n        //check if id store in favestweet list === there ? delete id : skip\r\n        //delete tweets from tweet list \r\n        //edit on db \r\n        const allTweets = this.state.tweets.slice();\r\n        // console.log(\"all tweets: \", allTweets);\r\n        // console.log(\"target tweet id: \", tweetId);\r\n        // const tweetIndex = allTweets.indexOf(allTweets[tweetId - 1]);\r\n        const tweetIndex = allTweets.indexOf(this.getTweet(tweetId));\r\n        // console.log(\"target tweet index: \", tweetIndex);\r\n        // console.log(\"tweet index: \", tweetIndex);\r\n        // tweetIndex > -1 ? console.log('remove', allTweets[tweetIndex].content) : console.log('not there');\r\n        tweetIndex > -1 ? allTweets.splice(tweetIndex, 1) : console.log(\"object\");\r\n        // console.log(allTweets);\r\n\r\n        // //second check if the target tweet in favesTweet\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        const faveTweetIndex = favesTweets.indexOf(this.getTweet(tweetId));\r\n        console.log(faveTweetIndex);\r\n        // tweetIndex < 0 ? console.log(\"skip\") : console.log(\"remove\");\r\n        if (tweetIndex < 0) {\r\n            favesTweets.splice(faveTweetIndex, 1);\r\n        }\r\n\r\n        this.deleteTweetFromDb1(allTweets, favesTweets);\r\n    }\r\n\r\n    deleteTweetFromDb1 = (tweets, favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        //first delete tweet from alltweet list\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        // console.log(\"tweet list before remove: \", getUserDetails[0].tweets.tweet);\r\n        getUserDetails[userId].tweets.tweet = tweets;\r\n        // console.log(\"after edit: \", getUserDetails[0].tweets.tweet);\r\n\r\n        // console.log(\"faves tweets before delete: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        // console.log(\"after faves tweets after delete: \", getUserDetails[userId].favesTweets);\r\n\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        this.setState({ favesTweets });\r\n        // console.log(\"faves tweets in state: \", this.state.favesTweets);\r\n        window.location.reload();\r\n        this.setState({ tweets });\r\n    }\r\n\r\n    getTweet = (tweetId) => {\r\n        let id = 0;\r\n        this.state.tweets.map((element, index) => {\r\n            // console.log(tweetId);\r\n            // console.log(element.id);\r\n\r\n            if (element.id == tweetId) {\r\n                id = element;\r\n                // console.log(\"yes\");\r\n\r\n            }\r\n        });\r\n\r\n        return id;\r\n    }\r\n\r\n    handleOptionClicked = () => {\r\n        const option = this.props.handleOptionClicked;\r\n        if (option === 'deleteAllTweetsClicked') {\r\n            console.log(option);\r\n        } else if (option === 'deleteAllFavesTweetsClicked') {\r\n            console.log(option);\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        this.handleOptionClicked();\r\n        const tweets = this.props.user.tweets.tweet.map((element, index) => {\r\n            if (this.state.favesTweets.includes(element.id)) {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={true} />\r\n                );\r\n            } else {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetId={element.id} tweetContent={element.content} isFave={false} />);\r\n            }\r\n        })\r\n\r\n        // //the faves tweet saved by id of tweet so, fisrt: we need to get faves tweet id then get these tweet by id\r\n        const favesTweet = this.state.favesTweets.map((favesTweetId, index) => {\r\n            // console.log(favesTweetId, ' ');\r\n            // const getTweet = this.state.tweets[0];\r\n            // console.log(this.getTweet(favesTweetId));\r\n            const getTweet = this.getTweet(favesTweetId);\r\n            // console.log(favesTweetId, ' ');\r\n            if (getTweet !== undefined) {\r\n                // console.log(favesTweetId);\r\n                // console.log(' content ', getTweet.content);\r\n\r\n                return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetContent={getTweet.content} isFave={true} />\r\n                )\r\n            }\r\n            return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} tweetContent={getTweet.content} isFave={true} />\r\n            )\r\n            // console.log(this.props.userLoggedInId);\r\n\r\n        });\r\n        // const favesTweet = ''\r\n\r\n        // console.log(this.state.displayName);\r\n        return (\r\n            // {this.state.tweet1.forEach(element => {\r\n            //     console.log(element.content);\r\n            // })}\r\n            <div className=\"TweetList\" >\r\n                {/* <TweetRow userName={this.state.userName} tweetId={1} tweetContent={this.state.tweet} /> */}\r\n                { this.state.listedTweets === 'all' ? tweets : favesTweet\r\n                }\r\n                {/* {this.state.listedTweets === 'all' ? this.state.favesTweets.length < 0 ? '' : favesTweet : ''} */}\r\n\r\n                {/* {tweets} */}\r\n                {/**<FavesTweets />*/}\r\n                {/* {favesTweet} */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",["98"],"import React, { Component } from 'react';\r\nimport TwitterDB from '../TwitterDB'\r\nimport '../comonents-style/Tweet-row.css'\r\n\r\nclass TweetRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     displayName: 'ashwag',\r\n        //     tweets: []\r\n        // };\r\n        this.handleFavesClick = this.handleFavesClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n    }\r\n    handleFavesClick = () => {\r\n        console.log(\"fave icon clicked\");\r\n        this.props.isFaveToggle(this.props.tweetId)\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        console.log(\"delee icon clicked\");\r\n        this.props.handleDeleteClick(this.props.tweetId)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n        //this.getUserLoggedInDetails();\r\n        // this.getUserLoggedInDetails();\r\n        // console.log(getUserDetails[0].displayName);\r\n        // console.log(this.state.tweets);\r\n        // console.log(this.state.displayName);\r\n        const isFave = (this.props.isFave) ? 'fave' : '';\r\n        // console.log(\"tweet : \" + this.props.tweetContent + ' ' + this.props.isFave);\r\n        return (\r\n            <div className=\"TweetRow\">\r\n                <div className=\"Tweet\">\r\n                    <div className=\"userDetails\">{this.props.userName}</div>\r\n                    <div className=\"container\">{this.props.tweetContent}</div>\r\n                    <div className=\"optionsIcon\">\r\n                        <span>\r\n                            <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                            <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["99","100","101","102"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["103","104","105","106","107","108","109","110"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["111","112","113","114","115","116"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js",["117"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js",["118"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js",["119"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",["120"],"import React, { Component } from 'react';\r\nimport '../comonents-style/AxiosContentRow.css'\r\n\r\nclass AxiosContentRow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AxiosContentRow\">\r\n                {this.props.imgUrl !== null ? <img src={this.props.imgUrl} /> : ''}\r\n                <p>{this.props.title}</p>\r\n                {/* <p>{\" ` \" + this.props.quetContent + \" ` \"}</p> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AxiosContentRow;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["121","122"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["123"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js",["124","125","126","127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":3,"nodeType":"135","messageId":"136","endLine":5,"endColumn":9},{"ruleId":"133","severity":1,"message":"137","line":7,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":7},{"ruleId":"133","severity":1,"message":"138","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":12},{"ruleId":"133","severity":1,"message":"139","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":15},{"ruleId":"133","severity":1,"message":"140","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"141","line":15,"column":3,"nodeType":"135","messageId":"136","endLine":15,"endColumn":6},{"ruleId":"133","severity":1,"message":"142","line":16,"column":3,"nodeType":"135","messageId":"136","endLine":16,"endColumn":6},{"ruleId":"133","severity":1,"message":"143","line":17,"column":3,"nodeType":"135","messageId":"136","endLine":17,"endColumn":6},{"ruleId":"133","severity":1,"message":"144","line":18,"column":3,"nodeType":"135","messageId":"136","endLine":18,"endColumn":6},{"ruleId":"133","severity":1,"message":"145","line":19,"column":3,"nodeType":"135","messageId":"136","endLine":19,"endColumn":10},{"ruleId":"133","severity":1,"message":"146","line":20,"column":3,"nodeType":"135","messageId":"136","endLine":20,"endColumn":17},{"ruleId":"133","severity":1,"message":"147","line":21,"column":3,"nodeType":"135","messageId":"136","endLine":21,"endColumn":11},{"ruleId":"133","severity":1,"message":"148","line":30,"column":8,"nodeType":"135","messageId":"136","endLine":30,"endColumn":17},{"ruleId":"133","severity":1,"message":"149","line":34,"column":8,"nodeType":"135","messageId":"136","endLine":34,"endColumn":12},{"ruleId":"133","severity":1,"message":"150","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":119,"column":48,"nodeType":"153","messageId":"154","endLine":119,"endColumn":50},{"ruleId":"155","severity":1,"message":"156","line":123,"column":28,"nodeType":"157","messageId":"158","endLine":123,"endColumn":30},{"ruleId":"133","severity":1,"message":"148","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"159","line":4,"column":22,"nodeType":"135","messageId":"136","endLine":4,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":11},{"ruleId":"133","severity":1,"message":"160","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":10},{"ruleId":"133","severity":1,"message":"161","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":20},{"ruleId":"133","severity":1,"message":"160","line":10,"column":5,"nodeType":"135","messageId":"136","endLine":10,"endColumn":10},{"ruleId":"133","severity":1,"message":"138","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":32,"column":47,"nodeType":"157","messageId":"158","endLine":32,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":59,"column":47,"nodeType":"157","messageId":"158","endLine":59,"endColumn":49},{"ruleId":"133","severity":1,"message":"162","line":150,"column":16,"nodeType":"135","messageId":"136","endLine":150,"endColumn":23},{"ruleId":"133","severity":1,"message":"163","line":221,"column":13,"nodeType":"135","messageId":"136","endLine":221,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":224,"column":33,"nodeType":"153","messageId":"154","endLine":224,"endColumn":35},{"ruleId":"133","severity":1,"message":"164","line":249,"column":15,"nodeType":"135","messageId":"136","endLine":249,"endColumn":27},{"ruleId":"133","severity":1,"message":"142","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":8},{"ruleId":"133","severity":1,"message":"143","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":8},{"ruleId":"133","severity":1,"message":"144","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":8},{"ruleId":"133","severity":1,"message":"134","line":11,"column":5,"nodeType":"135","messageId":"136","endLine":11,"endColumn":11},{"ruleId":"133","severity":1,"message":"160","line":12,"column":5,"nodeType":"135","messageId":"136","endLine":12,"endColumn":10},{"ruleId":"133","severity":1,"message":"137","line":13,"column":5,"nodeType":"135","messageId":"136","endLine":13,"endColumn":9},{"ruleId":"133","severity":1,"message":"165","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":23},{"ruleId":"133","severity":1,"message":"165","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":23},{"ruleId":"133","severity":1,"message":"166","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":8,"column":47,"nodeType":"169","endLine":8,"endColumn":78},{"ruleId":"133","severity":1,"message":"159","line":12,"column":22,"nodeType":"135","messageId":"136","endLine":12,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":13,"column":5,"nodeType":"135","messageId":"136","endLine":13,"endColumn":11},{"ruleId":"133","severity":1,"message":"170","line":2,"column":25,"nodeType":"135","messageId":"136","endLine":2,"endColumn":29},{"ruleId":"133","severity":1,"message":"171","line":4,"column":5,"nodeType":"135","messageId":"136","endLine":4,"endColumn":10},{"ruleId":"133","severity":1,"message":"150","line":8,"column":5,"nodeType":"135","messageId":"136","endLine":8,"endColumn":13},{"ruleId":"133","severity":1,"message":"160","line":9,"column":5,"nodeType":"135","messageId":"136","endLine":9,"endColumn":10},{"ruleId":"133","severity":1,"message":"138","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":12},{"ruleId":"133","severity":1,"message":"164","line":40,"column":15,"nodeType":"135","messageId":"136","endLine":40,"endColumn":27},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'News' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'RegisterForm' is defined but never used.","'newUser' is assigned a value but never used.","'key' is assigned a value but never used.","'getTwitterDB' is assigned a value but never used.","'AxiosContentRow' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]