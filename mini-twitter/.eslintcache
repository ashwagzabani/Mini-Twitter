[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js":"12","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js":"13","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js":"14","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js":"15","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js":"16","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js":"17","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\EditTargetTweet.js":"18","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\HealthNews.js":"19"},{"size":562,"mtime":1610366181316,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2136,"mtime":1610801381468,"results":"23","hashOfConfig":"21"},{"size":4287,"mtime":1610794704619,"results":"24","hashOfConfig":"21"},{"size":243,"mtime":1610134991880,"results":"25","hashOfConfig":"21"},{"size":11541,"mtime":1610798652917,"results":"26","hashOfConfig":"21"},{"size":3638,"mtime":1610798695237,"results":"27","hashOfConfig":"21"},{"size":1085,"mtime":1610793559098,"results":"28","hashOfConfig":"21"},{"size":10015,"mtime":1610743496564,"results":"29","hashOfConfig":"21"},{"size":5057,"mtime":1610350884562,"results":"30","hashOfConfig":"21"},{"size":3969,"mtime":1610801323450,"results":"31","hashOfConfig":"21"},{"size":1332,"mtime":1610801777335,"results":"32","hashOfConfig":"21"},{"size":1330,"mtime":1610801971540,"results":"33","hashOfConfig":"21"},{"size":542,"mtime":1610802919054,"results":"34","hashOfConfig":"21"},{"size":6120,"mtime":1610793635125,"results":"35","hashOfConfig":"21"},{"size":2291,"mtime":1610703936556,"results":"36","hashOfConfig":"21"},{"size":5891,"mtime":1610744308246,"results":"37","hashOfConfig":"21"},{"size":2538,"mtime":1610799417994,"results":"38","hashOfConfig":"21"},{"size":1280,"mtime":1610801585603,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8zyv1d",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["83","84"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",["99"],"import React, { Component } from 'react';\r\nimport TweetList from './Tweet-list';\r\nimport '../comonents-style/Home.css'\r\nimport NewTweet from './NewTweet';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // props.history.location.state.userId\r\n            userLoggedInId: parseInt(localStorage.getItem('userLoggedInId')),\r\n            showComponent: false,\r\n            handleClicked: false,\r\n            userLoggedInDetails: {},\r\n            newTweetContent: ''\r\n        }\r\n\r\n        this.getTheNewTweetContent = this.getTheNewTweetContent.bind(this)\r\n        this.insertNewTweet = this.insertNewTweet.bind(this)\r\n    }\r\n\r\n    getUserLoggedInDetails = () => {\r\n        // newTweetContent\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[userLoggedInId - 1]\r\n        });\r\n    }\r\n    handleAddClicked = () => {\r\n        // console.log(\"add icon clicked\");\r\n        this.setState({\r\n            showComponent: true,\r\n            handleClicked: true\r\n        });\r\n\r\n    }\r\n\r\n    insertNewTweet = (newTweetComponent) => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const indexOfUserId = this.state.userLoggedInId - 1;\r\n        const currentTweets = getUserDetails[indexOfUserId].tweets.tweet;\r\n        console.log(currentTweets.length);\r\n        console.log(newTweetComponent);\r\n        const newTweet = {\r\n            id: currentTweets.length + 1,\r\n            content: newTweetComponent\r\n        };\r\n        console.log(indexOfUserId);\r\n        // console.log(getUserDetails[indexOfUserId].tweets.tweet);\r\n        currentTweets.unshift(newTweet);\r\n        getUserDetails[indexOfUserId].tweets.tweet = currentTweets;\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[indexOfUserId]\r\n        });\r\n\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            showComponent: false,\r\n            handleClicked: false\r\n        });\r\n        // console.log(\"handleShowModalToggle value :\", this.state.showComponent);\r\n    }\r\n\r\n    getTheNewTweetContent = (newTweetContent) => {\r\n        this.setState({ newTweetContent: newTweetContent })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getUserLoggedInDetails();\r\n\r\n    }\r\n\r\n    handleSignOutClicked = () => {\r\n        // console.log(this.props.handleOptionClicked);\r\n        if (this.props.handleOptionClicked === 'signOutClicked') {\r\n            console.log('hello');\r\n            // this.props.history.push(\"/\");\r\n            // console.log(this.props.history);\r\n            return <Route path=\"/user/home\" to=\"/\" />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const numOfTweets = this.state.userLoggedInDetails.tweets.tweet.length;\r\n        const style = (numOfTweets === 0) ? 'emptyList' : numOfTweets === 1 ? \"oneTweet\" : numOfTweets === 2 ? 'twoTweet' : '';\r\n\r\n        this.handleSignOutClicked();\r\n        return (\r\n            <div className=\"Home\">\r\n                {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? this.props.history.push(\"/\") : (\r\n                    <>\r\n                        <TweetList getUserDetails={() => this.getUserLoggedInDetails()} user={this.state.userLoggedInDetails} listedTweets={this.props.listedTweets} handleOptionClicked={this.props.handleOptionClicked} />\r\n                        {/* {this.props.tweets} */}\r\n                        {this.props.listedTweets === 'all' ? <span className={\"addIcon \" + style} onClick={() => this.handleAddClicked()} ><i className=\"fa fa-plus-circle\"></i></span> : ''}\r\n                        {/* <NewTweet /> */}\r\n                        {this.state.handleClicked ? <NewTweet handleShow={this.handleShow} showModalStatus={this.state.handleClicked} insertNewTweet={this.insertNewTweet} /> : null}\r\n                    </>\r\n                )}\r\n                {/*home page*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",["100","101"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["102","103","104"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["105","106","107"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Button,\r\n    Card\r\n} from 'react-bootstrap'\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: '',\r\n            alert: false\r\n\r\n        }\r\n\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * When the user click on register button the register function will be call\r\n     */\r\n    register = (e) => {\r\n\r\n        e.preventDefault();\r\n        //call validation method \r\n        //if validtion ir true => redirect to user home page\r\n        this.validation();\r\n\r\n        // console.log(this.state.TwitterDB);\r\n    }//end-register fun.\r\n\r\n    /**\r\n     * after allow the user to register his information will be saved in db - localstorage\r\n     */\r\n    getNewUser = (id) => {\r\n        let newUser = {};\r\n        return newUser = {\r\n            \"id\": id,\r\n            \"userName\": this.state.userName,\r\n            \"displayName\": this.state.displayName,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"tweets\": {\r\n                \"tweet\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"content\": \"Hello, this my fisrt tweet\"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"content\": \"Good morning\"\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"content\": \"Good afternoon\"\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"content\": \"hello\"\r\n                    },\r\n                    {\r\n                        \"id\": 5,\r\n                        \"content\": \"TEST1\"\r\n                    },\r\n                    {\r\n                        \"id\": 6,\r\n                        \"content\": \"test2\"\r\n                    },\r\n                    {\r\n                        \"id\": 7,\r\n                        \"content\": \"ashwag\"\r\n                    },\r\n                    {\r\n                        \"id\": 8,\r\n                        \"content\": \"SEI-14\"\r\n                    },\r\n                    {\r\n                        \"id\": 9,\r\n                        \"content\": \"today\"\r\n                    },\r\n                    {\r\n                        \"id\": 10,\r\n                        \"content\": \"today\"\r\n                    }\r\n                ]\r\n            },\r\n            \"favesTweets\": []\r\n        }\r\n    }//end-getNewUser fun.\r\n\r\n    /**\r\n     * After clicked on register button the validation fun. will be call via register func.\r\n     * validation func. => check if the user name and email are already register \r\n     */\r\n    validation = () => {\r\n\r\n        if (this.state.userName === '' || this.state.displayName === '' || this.state.email === '' || (this.state.password !== '' && this.state.password.length < 6)) {\r\n            // console.log(\"please fill the input required\");\r\n            //alert error\r\n\r\n        } else {\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n\r\n                //the TwitterDb is empty,so there is no users to check\r\n                let arrOfObject = [];\r\n                let userId = 1;\r\n                const newUser = this.getNewUser(userId);\r\n                localStorage.setItem('userLoggedInId', userId)\r\n                arrOfObject.push(newUser);\r\n                localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject))\r\n                this.props.history.push(\"/user/home\")\r\n\r\n            } else {\r\n\r\n                // nedd check if the userName or Email already exsist\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n\r\n                    //after check all of db and the user name and email are not exsist allow user to register\r\n                    if (((getTwitterDB.length - 1) === index) && (element.userName !== this.state.userName) && (element.email !== this.state.email)) {\r\n\r\n                        // console.log(\"passed\");\r\n                        const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                        let userId = getTwitterDB.length + 1;\r\n                        localStorage.setItem('userLoggedInId', userId)\r\n                        const newUser = this.getNewUser(userId)\r\n                        this.setState({ userId })\r\n                        getTwitterDB.push(newUser);\r\n                        localStorage.setItem('TwitterDB', JSON.stringify(getTwitterDB));\r\n                        this.props.history.push(\"/user/home\")\r\n\r\n                    } else {\r\n\r\n                        if (element.userName === this.state.userName) {\r\n\r\n                            // console.log(\"the user Name already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'userName' })\r\n                            if (element.email === this.state.email) {\r\n                                // console.log(\"the email already exsist\");\r\n                                //alert error\r\n                                this.alertMessage();\r\n                                this.setState({ alert: true, alertValue: 'userName & email' })\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            // console.log(\"the email already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'email' })\r\n\r\n                        }// end-else\r\n                    }// end-else\r\n                })//end-map\r\n            }//end-else\r\n        }//end-else\r\n    }//end-validation fun.\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * the alerMessage fun. will be call via validation\r\n     * if the user name and email are already exsist the alert message will be show\r\n     */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is already used';\r\n        } else if (this.state.alertValue === 'email') {\r\n            alertValue = 'The email is already registered';\r\n        } else if (this.state.alertValue === 'userName & email') {\r\n            alertValue = 'The user name and the email are already registered';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"RegisterForm\" >\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>User Information</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Display Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"displayName\" value={this.state.displayName} placeholder=\"Enter display name\" onChange={this.assignValueToState} />\r\n                                {this.state.displayName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.assignValueToState} />\r\n                                {this.state.email === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.register}>Register</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Explore.js",["108","109","110","111","112","113"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Quets.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Movies.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\AxiosContentRow.js",["114","115"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\UserHomePage.js",["116","117","118"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\NewTweet.js",["119"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                hello\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\SignIn.js",["120","121"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap'\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n        // console.log(this.state.[fieldName]);\r\n        // console.log(fieldName);\r\n\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        // const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        // if (this.state.userId <= (getTwitterDB.length + 1)) {\r\n        //     this.setState({\r\n        //         userId: getTwitterDB.length + 1\r\n        //     })\r\n        // }\r\n        // if (fieldName !== 'password') {\r\n        //     this.validation(fieldName, event.target.value);\r\n        // }\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * When the user click on sign in button the signIn function will be call\r\n     */\r\n    signIn = (e) => {\r\n        e.preventDefault();\r\n        this.validation();\r\n    }//end-signIn fun.\r\n\r\n    /**\r\n    * After clicked on sign in button the validation fun. will be call via signIn func.\r\n    * validation func. => check if the user name and email are not exsists \r\n    */\r\n    validation = () => {\r\n        if (this.state.userName === '' || this.state.password === '') {\r\n            console.log(\"please fill the input required\");\r\n        } else {\r\n            // console.log(\"you are not register\");\r\n            // //get Twitter Db from local storage\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n                //the TwitterDb is empty\r\n                //alert => your are not registerd\r\n                console.log(\"you are not register\");\r\n            } else {\r\n                // console.log(\"you are register\");\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n                    if (element.userName === this.state.userName) {\r\n                        // console.log(\"step check userName ==> pass\");\r\n                        if (element.password === this.state.password) {\r\n                            // console.log(\"step check password ==> pass\");\r\n                            parseInt(localStorage.setItem(\"userLoggedInId\", element.id))\r\n                            this.props.history.push(\"/user/home\")\r\n                        } else {\r\n                            // console.log(\"Your password is error \");\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'password' })\r\n                        }\r\n                    } else if (getTwitterDB.length - 1 === index) {\r\n                        // console.log(\"Your User Name is error or you are not register\");\r\n                        this.alertMessage();\r\n                        this.setState({ alert: true, alertValue: 'userName' })\r\n\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }//end-validation fun.\r\n\r\n    /**\r\n      * the alerMessage fun. will be call via validation\r\n      * if the user name and email are not exsist the alert message will be show\r\n      */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is not exsist';\r\n        } else if (this.state.alertValue === 'password') {\r\n            alertValue = 'The passwrod is not correct';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className='SignIn'>\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>Welcome Back!</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.signIn}>Sign In</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\EditTargetTweet.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\HealthNews.js",["122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":5,"column":3,"nodeType":"129","messageId":"130","endLine":5,"endColumn":9},{"ruleId":"127","severity":1,"message":"131","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":7},{"ruleId":"127","severity":1,"message":"132","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":12},{"ruleId":"127","severity":1,"message":"133","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":15},{"ruleId":"127","severity":1,"message":"134","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":14},{"ruleId":"127","severity":1,"message":"135","line":15,"column":3,"nodeType":"129","messageId":"130","endLine":15,"endColumn":6},{"ruleId":"127","severity":1,"message":"136","line":16,"column":3,"nodeType":"129","messageId":"130","endLine":16,"endColumn":6},{"ruleId":"127","severity":1,"message":"137","line":17,"column":3,"nodeType":"129","messageId":"130","endLine":17,"endColumn":6},{"ruleId":"127","severity":1,"message":"138","line":18,"column":3,"nodeType":"129","messageId":"130","endLine":18,"endColumn":6},{"ruleId":"127","severity":1,"message":"139","line":19,"column":3,"nodeType":"129","messageId":"130","endLine":19,"endColumn":10},{"ruleId":"127","severity":1,"message":"140","line":20,"column":3,"nodeType":"129","messageId":"130","endLine":20,"endColumn":17},{"ruleId":"127","severity":1,"message":"141","line":21,"column":3,"nodeType":"129","messageId":"130","endLine":21,"endColumn":11},{"ruleId":"127","severity":1,"message":"142","line":30,"column":8,"nodeType":"129","messageId":"130","endLine":30,"endColumn":17},{"ruleId":"127","severity":1,"message":"143","line":34,"column":8,"nodeType":"129","messageId":"130","endLine":34,"endColumn":18},{"ruleId":"127","severity":1,"message":"144","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":121,"column":48,"nodeType":"147","messageId":"148","endLine":121,"endColumn":50},{"ruleId":"145","severity":1,"message":"146","line":207,"column":66,"nodeType":"147","messageId":"148","endLine":207,"endColumn":68},{"ruleId":"127","severity":1,"message":"149","line":4,"column":22,"nodeType":"129","messageId":"130","endLine":4,"endColumn":28},{"ruleId":"127","severity":1,"message":"128","line":5,"column":5,"nodeType":"129","messageId":"130","endLine":5,"endColumn":11},{"ruleId":"127","severity":1,"message":"150","line":6,"column":5,"nodeType":"129","messageId":"130","endLine":6,"endColumn":10},{"ruleId":"127","severity":1,"message":"151","line":48,"column":16,"nodeType":"129","messageId":"130","endLine":48,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":114,"column":51,"nodeType":"154","messageId":"155","endLine":114,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":129,"column":51,"nodeType":"147","messageId":"148","endLine":129,"endColumn":53},{"ruleId":"127","severity":1,"message":"136","line":5,"column":5,"nodeType":"129","messageId":"130","endLine":5,"endColumn":8},{"ruleId":"127","severity":1,"message":"137","line":6,"column":5,"nodeType":"129","messageId":"130","endLine":6,"endColumn":8},{"ruleId":"127","severity":1,"message":"138","line":7,"column":5,"nodeType":"129","messageId":"130","endLine":7,"endColumn":8},{"ruleId":"127","severity":1,"message":"128","line":11,"column":5,"nodeType":"129","messageId":"130","endLine":11,"endColumn":11},{"ruleId":"127","severity":1,"message":"150","line":12,"column":5,"nodeType":"129","messageId":"130","endLine":12,"endColumn":10},{"ruleId":"127","severity":1,"message":"131","line":13,"column":5,"nodeType":"129","messageId":"130","endLine":13,"endColumn":9},{"ruleId":"156","severity":1,"message":"157","line":8,"column":47,"nodeType":"158","endLine":8,"endColumn":78},{"ruleId":"156","severity":1,"message":"157","line":8,"column":81,"nodeType":"158","endLine":8,"endColumn":99},{"ruleId":"127","severity":1,"message":"149","line":12,"column":22,"nodeType":"129","messageId":"130","endLine":12,"endColumn":28},{"ruleId":"127","severity":1,"message":"128","line":13,"column":5,"nodeType":"129","messageId":"130","endLine":13,"endColumn":11},{"ruleId":"127","severity":1,"message":"134","line":19,"column":8,"nodeType":"129","messageId":"130","endLine":19,"endColumn":14},{"ruleId":"127","severity":1,"message":"159","line":2,"column":25,"nodeType":"129","messageId":"130","endLine":2,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":68,"column":51,"nodeType":"154","messageId":"155","endLine":68,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":75,"column":51,"nodeType":"147","messageId":"148","endLine":75,"endColumn":53},{"ruleId":"127","severity":1,"message":"160","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'Explore' is defined but never used.","'Search' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'Dropdown' is defined but never used.","'TwitterDB' is defined but never used.","'HealthNews' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Router' is defined but never used.","'Route' is defined but never used.","'newUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]