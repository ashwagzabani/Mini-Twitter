[{"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js":"2","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js":"3","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js":"4","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js":"5","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js":"6","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Faves-tweets.js":"7","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js":"8","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js":"9","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js":"10","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js":"11","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js":"12"},{"size":562,"mtime":1610366181316,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":3958,"mtime":1610375568585,"results":"16","hashOfConfig":"14"},{"size":335,"mtime":1610377007296,"results":"17","hashOfConfig":"14"},{"size":235,"mtime":1610135864697,"results":"18","hashOfConfig":"14"},{"size":243,"mtime":1610134991880,"results":"19","hashOfConfig":"14"},{"size":331,"mtime":1610376983388,"results":"20","hashOfConfig":"14"},{"size":2585,"mtime":1610383274960,"results":"21","hashOfConfig":"14"},{"size":1371,"mtime":1610383437944,"results":"22","hashOfConfig":"14"},{"size":1014,"mtime":1610277389312,"results":"23","hashOfConfig":"14"},{"size":9367,"mtime":1610375119663,"results":"24","hashOfConfig":"14"},{"size":5057,"mtime":1610350884562,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8zyv1d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\index.js",[],["54","55"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\App.js",["56"],"import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport News from './components/News';\nimport Search from './components/Search';\nimport FavesTweets from './components/Faves-tweets';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Tab,\n  Row,\n  Col,\n  Nav,\n  Popover,\n  OverlayTrigger,\n  Dropdown\n} from 'react-bootstrap'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Nav from 'react-bootstrap/Nav'\n// import Popover from 'react-bootstrap/Popover'\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport 'font-awesome/css/font-awesome.min.css';\nimport TwitterDB from './TwitterDB'\nimport LandingPage from './components/Landing-page';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: \"\"\n    }\n  }\n  render() {\n    if (localStorage.getItem('TwitterDB') === null) {\n      console.log('empty');\n      localStorage.setItem('TwitterDB', [])\n    } else {\n      console.log('not empty');\n    }\n    //pop up message \n    const popover = (\n      <Popover>\n        {/* <ul>\n          <li>My Profile</li>\n          <li>Followers</li>\n          <li>Sign out</li>\n        </ul> */}\n        <Dropdown.Item href=\"#/action-1\">My Profile</Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\">Sign out</Dropdown.Item>\n      </Popover>\n    );\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            {TwitterDB.users[0].displayName}\n            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n              <span className=\"options\">\n                <i className=\"fa fa-bars\">\n                </i>\n              </span>\n            </OverlayTrigger>\n          </div>\n          <Route exact path=\"/LandingPage\" component={LandingPage} />\n          {/* <Link to='/'>Home</Link> {' || '}\n          <Link to='/news'>News</Link> {' || '}\n          <Link to='/search'>Search</Link> {' || '}\n          <Link to='/favesTweets'>FavesTweets</Link> */}\n\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Home\">\n            <Row>\n              <Col sm={3}>\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/home\" eventKey=\"Home\" ><i className=\"fa fa-home\"></i>{'  '}Home</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/news\" eventKey=\"News\" ><i className=\"fa fa-newspaper\"></i>{'  '}News</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/favesTweets\" eventKey=\"favesTweets\"><i className=\"fa fa-star\"></i>{'  '}favesTweets</Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/search\" eventKey=\"search\"><i className=\"fa fa-search\"></i>{'  '}search</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </Col>\n              <Col sm={9}>\n                <Tab.Content>\n                  {/* <Tab.Pane eventKey=\"News\">\n                    <Route exact path='/' component={Home} />hhh\n                     </Tab.Pane>\n                  <Tab.Pane eventKey=\"second\">\n                    <Route path='/news' component={News} />\n                  </Tab.Pane> */}\n                  <Route path='/home' component={Home} />\n                  <Route path='/news' component={News} />\n                  <Route path='/search' component={Search} />\n                  <Route path='/favesTweets' component={FavesTweets} />\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Home.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\News.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Search.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Faves-tweets.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-list.js",[],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Tweet-row.js",["57","58"],"C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Landing-page.js",["59"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport RegisterForm from './Register-form'\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"LandingPage\">\r\n                    <Jumbotron>\r\n                        <h1>Welcom to mini-twitter</h1>\r\n                        <p>\r\n                            Join to a simple social now, enjoy writing your tweets and share it with others.\r\n                    </p>\r\n                        <p>\r\n                            <Button variant=\"primary\" as={Link} to=\"/register\">Join Now</Button>\r\n                        </p>\r\n                    </Jumbotron>\r\n                    <Route exact path='/register' component={RegisterForm} />\r\n\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\components\\Register-form.js",["60","61","62","63","64","65"],"import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Home from './Home';\r\n\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alert: false,\r\n            alertStatus: false,\r\n            alertValue: ''\r\n\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    register = (e) => {\r\n        e.preventDefault();\r\n\r\n        //get db from local storage\r\n        //convert from string to json\r\n        //check if it's empty\r\n        //push the new user \r\n        //set new db to local storage and convert db from json to string\r\n        // if (validation()) {\r\n        let getTwitterDB;\r\n        let userId = 0;\r\n        if (localStorage.getItem('TwitterDB') == '') {\r\n            console.log(\"object\");\r\n            let arrOfObject = [];\r\n            userId = 1;\r\n            const newUser = this.getNewUser(userId);\r\n            //this.setState({ userId: 1 })\r\n            //getTwitterDB = localStorage.getItem('TwitterDB');\r\n            arrOfObject.push(newUser);\r\n            // if (getTwitterDB === '') {\r\n            //     console.log('object');\r\n            // }\r\n            // let arrOfObject = [];\r\n            // arrOfObject.push(getTwitterDB);\r\n            console.log(arrOfObject);\r\n            localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject))\r\n        }\r\n        else {\r\n            getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n            // if (getTwitterDB[0] === '') {\r\n            //     getTwitterDB.shift(0);\r\n            //     console.log(\"donw\");\r\n            // }\r\n            //console.log(getTwitterDB.length);\r\n            userId = getTwitterDB.length + 1;\r\n            const newUser = this.getNewUser(userId)\r\n            getTwitterDB.push(newUser);\r\n            console.log(getTwitterDB);\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getTwitterDB));\r\n        }\r\n        //this.validation();\r\n        //pass user id to home page\r\n        <Router>\r\n            <Redirect from=\"/register\" to=\"/home\" />\r\n            <Route path='/home' render={(props) => <Home userLoggedInId={userId} routeProps={props} />} ></Route>\r\n        </Router>\r\n    }\r\n\r\n    getNewUser = (id) => {\r\n        let newUser = {};\r\n        return newUser = {\r\n            \"id\": id,\r\n            \"userName\": this.state.userName,\r\n            \"displayName\": this.state.displayName,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"tweets\": {\r\n                \"tweet\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"content\": \"Hello, this my fisrt tweet\",\r\n                        \"send_time\": \"2021-01-10 10:00:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"content\": \"Good morning\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"content\": \"Good afternoon\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"content\": \"hello\",\r\n                        \"send_time\": \"2021-01-10 10:20:00 AM\"\r\n                    }\r\n                ]\r\n            },\r\n            \"favesTweets\": [4, 2],\r\n            \"intersetedTopics\": [],\r\n            \"followers\": [],\r\n            \"log_in\": false\r\n        }\r\n    }\r\n\r\n\r\n    validation = (fieldName, value) => {\r\n        //check if user name already used\r\n        //check if email already used\r\n        //check if password less than 6 digit\r\n        let key = 'id';\r\n        console.log(fieldName);\r\n        const TwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        TwitterDB.map((element) => {\r\n            if (element[fieldName] === value) {\r\n                // console.log(element[fieldName]);\r\n                console.log(\"problem\");\r\n                this.setState({ alertStatus: true, alertValue: fieldName })\r\n                console.log(fieldName, '  ', this.state.alertValue);\r\n                // this.alertMessage(fieldName);\r\n            } else {\r\n                this.setState({ alertValue: '', alertStatus: false })\r\n            }\r\n            //console.log(element[key]);\r\n            // return false;\r\n\r\n            //console.log(element);\r\n        });\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n        // console.log(this.state.[fieldName]);\r\n        // console.log(fieldName);\r\n\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        if (fieldName !== 'password') {\r\n            this.validation(fieldName, event.target.value);\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate(prevprop, prevstate) {\r\n    //     console.log(prevstate.alertType);\r\n    //     if (prevstate.alertType !== this.state.alertType) {\r\n    //         this.alertMessage();\r\n    //     }\r\n    //     //this.alertMessage();\r\n    //     // console.log(fieldName);\r\n    //     // // console.log(prevstate[\"alertType\"]);\r\n    //     // let alertType = this.state.alertType;\r\n    //     // if (alertType === \"userName\") {\r\n    //     //     console.log(\"yes\");\r\n    //     //     this.setState({ alertValue: \"The user name already used\" })\r\n    //     // } else if (alertType === \"email\") {\r\n    //     //     this.setState({ alertValue: 'The email already registered' })\r\n    //     // }\r\n    //     // else if (alertType === \"password\") {\r\n    //     //     if (this.state.password.length < 6) {\r\n    //     //         this.setState({ alertValue: 'The password must be less than 6 digit' })\r\n    //     //     }\r\n    //     // }\r\n    //     // console.log(this.state.alertType);\r\n    //     // // console.log(key);\r\n    //     // this.alertMessage();\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.alertMessage()\r\n    // }\r\n    // alertMessage = () => {\r\n    //     // console.log(fieldName);\r\n    //     // console.log(prevstate[\"alertType\"]);\r\n    //     console.log('alert type: ' + this.state.alertType);\r\n    //     console.log('alert value: ' + this.state.alertValue);\r\n    //     console.log('alert status: ' + this.state.alertStatus);\r\n    //     let alertType = this.state.alertType;\r\n    //     if (alertType !== '') {\r\n    //         console.log(\"ok\");\r\n\r\n    //         if (alertType === \"userName\") {\r\n    //             console.log(\"yes\");\r\n    //             this.setState({ alertValue: \"The user name already used\" })\r\n    //         } else if (alertType === \"email\") {\r\n    //             this.setState({ alertValue: 'The email already registered' })\r\n    //         }\r\n    //         // else if (fieldName === \"password\") {\r\n    //         //     if (this.state.password.length < 6) {\r\n    //         //         this.setState({ alertValue: 'The password must be less than 6 digit' })\r\n    //         //     }\r\n    //         // }\r\n    //         console.log(this.state.alertType);\r\n    //         // console.log(key);\r\n    //         return (\r\n    //             <Alert variant='warning'>\r\n    //                 {this.state.alertValue}\r\n    //             </Alert>);\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RegisterForm\" >\r\n                {/* {this.state.alertStatus ? this.alertMessage : ''} */}\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <legend>User Information</legend>\r\n                        <Form.Group>\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <input type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Display Name</Form.Label>\r\n                            <input type=\"text\" name=\"displayName\" value={this.state.displayName} placeholder=\"Enter display name\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <input type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>password</Form.Label>\r\n                            <input name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                        </Form.Group>\r\n                        <button className=\"primary\" type=\"submit\" onClick={this.register}><Link to=\"/home\">Register</Link></button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\ashwag\\Desktop\\Project 2\\Project-2\\mini-twitter\\src\\TwitterDB.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":3,"nodeType":"72","messageId":"73","endLine":5,"endColumn":9},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":6,"column":5,"nodeType":"77","messageId":"78","endLine":12,"endColumn":6},{"ruleId":"70","severity":1,"message":"71","line":5,"column":5,"nodeType":"72","messageId":"73","endLine":5,"endColumn":11},{"ruleId":"70","severity":1,"message":"79","line":4,"column":5,"nodeType":"72","messageId":"73","endLine":4,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":9,"column":5,"nodeType":"72","messageId":"73","endLine":9,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":44,"column":47,"nodeType":"82","messageId":"83","endLine":44,"endColumn":49},{"ruleId":"70","severity":1,"message":"84","line":83,"column":16,"nodeType":"72","messageId":"73","endLine":83,"endColumn":23},{"ruleId":"70","severity":1,"message":"85","line":125,"column":13,"nodeType":"72","messageId":"73","endLine":125,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":128,"column":33,"nodeType":"88","messageId":"89","endLine":128,"endColumn":35},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'TwitterDB' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Alert' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newUser' is assigned a value but never used.","'key' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]