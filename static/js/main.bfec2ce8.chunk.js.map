{"version":3,"sources":["components/EditTargetTweet.js","components/Tweet-row.js","components/Tweet-list.js","components/NewTweet.js","components/Home.js","news.png","components/AxiosContentRow.js","components/Sports.js","components/HealthNews.js","components/Technology.js","components/Explore.js","components/Search.js","components/Landing-page.js","components/Register-form.js","components/UserHomePage.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["NewTweet","props","handleClose","handleShow","assignValueToState","event","newContent","target","value","setState","getTweetContent","state","insertNewTweetContent","show","showModalStatus","currentTweet","bind","console","log","this","className","Modal","onHide","Header","closeButton","Title","Body","Form","Control","type","name","onChange","Text","Footer","Button","variant","onClick","Component","TweetRow","handleFavesClick","isFaveToggle","tweetId","handleDeleteClick","handleEditClick","showComponent","handleEditClicked","insertNewTweet","isFave","Card","userName","tweetContent","EditTargetTweet","TweetList","editFavesTweetsOnDb","favesTweets","getUserDetails","JSON","parse","localStorage","getItem","userId","parseInt","setItem","stringify","allTweets","tweets","slice","tweetIndex","indexOf","getTweet","splice","faveTweetIndex","deleteTweetFromDb1","tweet","window","location","reload","id","map","element","index","handleOptionClicked","option","handleDeleteAllTweetsClicked","handleDeleteAllFavesTweetsClicked","user","length","editTargetTweetOnDb","content","displayName","listedTweets","handleFaveToggle","unshift","includes","favesTweet","favesTweetId","undefined","newTweetContent","n","placeholder","Home","getUserLoggedInDetails","userLoggedInId","userLoggedInDetails","handleAddClicked","handleClicked","newTweetComponent","indexOfUserId","currentTweets","newTweet","getTheNewTweetContent","handleSignOutClicked","path","to","numOfTweets","style","history","push","AxiosContentRow","imgUrl","src","news","title","Sports","responseData","callBackAxios","getQuetList","articles","urlToImage","HealthNews","Technology","Explore","bringAxios","url","tab","axios","get","then","response","data","tab2responseData","catch","error","tab1responseData","tab3responseData","Tabs","defaultActiveKey","Tab","eventKey","LandingPage","as","Link","Jumbotron","RegisterForm","register","e","preventDefault","validation","getNewUser","email","password","arrOfObject","newUser","getTwitterDB","alertMessage","alert","alertValue","fieldName","setTimeout","Alert","TwitterDB","Group","Label","UserHomePage","handleTypeClicked","handlesignOutClicked","userLoggedInDisplayName","userDisplayName","popover","Popover","Dropdown","href","Item","Container","Row","Col","sm","OverlayTrigger","trigger","placement","overlay","Nav","Content","render","component","SignIn","signIn","App","basename","process","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfec2ce8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newContent: props.currentTweet\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newContent = event.target.value;\r\n        this.setState({ newContent })\r\n        // console.log(\"tweet content:\", this.state.newContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        if (this.state.newContent === '') {\r\n            //alert \r\n        } else {\r\n            this.props.insertNewTweetContent(this.state.newContent);\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Edit Your Tweet Content</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Control type=\"text\" name=\"newTweet\" value={this.state.newContent} onChange={this.assignValueToState} />\r\n                        {this.state.newContent === '' ?\r\n                            (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","import React, { Component } from 'react';\r\nimport EditTargetTweet from './EditTargetTweet'\r\nimport '../comonents-style/Tweet-row.css'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nclass TweetRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showComponent: false,\r\n            handleEditClicked: false,\r\n        };\r\n\r\n        this.handleFavesClick = this.handleFavesClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n        this.handleEditClick = this.handleEditClick.bind(this)\r\n\r\n    }\r\n    handleFavesClick = () => {\r\n        console.log(\"fave icon clicked\");\r\n        this.props.isFaveToggle(this.props.tweetId)\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        console.log(\"delee icon clicked\");\r\n        this.props.handleDeleteClick(this.props.tweetId)\r\n    }\r\n\r\n\r\n    handleEditClick = () => {\r\n        this.setState({\r\n            showComponent: true,\r\n            handleEditClicked: true\r\n        });\r\n        console.log(\"edit clicked\" + this.props.tweetId);\r\n\r\n        // this.editTargetTweetOnDb(tweetId);\r\n    }\r\n    handleShow = () => {\r\n        this.setState({\r\n            showComponent: false,\r\n            handleEditClicked: false\r\n        });\r\n        // console.log(\"handleShowModalToggle value :\", this.state.showComponent);\r\n    }\r\n\r\n    insertNewTweet = (newContent) => {\r\n\r\n        this.props.handleEditClicked(this.props.tweetId, newContent);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        //this.getUserLoggedInDetails();\r\n        // this.getUserLoggedInDetails();\r\n        // console.log(getUserDetails[0].displayName);\r\n        // console.log(this.state.tweets);\r\n        // console.log(this.state.displayName);\r\n        const isFave = (this.props.isFave) ? 'fave' : '';\r\n        // console.log(\"tweet : \" + this.props.tweetContent + ' ' + this.props.isFave);\r\n        return (\r\n            <div className=\"TweetRow\">\r\n                {/* <div className=\"Tweet\">\r\n                    <div className=\"userDetails\">{this.props.userName}</div>\r\n                    <div className=\"container\">{this.props.tweetContent}</div>\r\n                    <div className=\"optionsIcon\">\r\n                        <span>\r\n                            <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                            <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                        </span>\r\n                    </div>\r\n                </div> */}\r\n                <Card className=\"Tweet\">\r\n                    <Card.Header >{this.props.userName}</Card.Header>\r\n                    <Card.Body className=\"container\">\r\n                        <Card.Text>\r\n                            {this.props.tweetContent}\r\n                        </Card.Text>\r\n                        <footer>\r\n                            <span>\r\n                                <i className={\"fa fa-star \" + isFave} onClick={this.handleFavesClick}></i>\r\n                                <i className=\"fa fa-edit\" onClick={() => this.handleEditClick()}></i>\r\n                                <i className=\"fa fa-trash\" onClick={this.handleDeleteClick}></i>\r\n                                {this.state.handleEditClicked ? <EditTargetTweet handleShow={this.handleShow} showModalStatus={this.state.handleEditClicked} currentTweet={this.props.tweetContent} insertNewTweetContent={this.insertNewTweet} /> : null}\r\n\r\n                            </span>\r\n                        </footer>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetRow;\r\n","import React, { Component } from 'react';\r\nimport TweetRow from './Tweet-row';\r\n\r\nclass TweetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayName: props.user.displayName,\r\n            userName: props.user.userName,\r\n            favesTweets: props.user.favesTweets,\r\n            tweets: props.user.tweets.tweet,\r\n            listedTweets: props.listedTweets,\r\n            currentTweet: ''\r\n\r\n        }\r\n\r\n        this.handleFaveToggle = this.handleFaveToggle.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //I save the favestweet by tweet id so, I add favetoggle for the target favestweet  \r\n    handleFaveToggle(tweetId) {\r\n        //bring target tweet by id\r\n        //check if tweet in favesTweets and get their index \r\n        //if it's there toggle them ? remove from favestweets : add it to favestweets\r\n        //edit on db to push new favestweets array\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        console.log('faves tweet in state', favesTweets);\r\n        console.log('tweet id', tweetId);\r\n        const tweetIndex = favesTweets.indexOf(tweetId);\r\n        console.log(\"tweet index: \", tweetIndex);\r\n        tweetIndex < 0 ? console.log('not there') : console.log('already there');\r\n        // if (tweetIndex < 0) {\r\n        //     faves.unshift(tweetId)\r\n        // } else {\r\n        //     faves.splice(tweetIndex, 1)\r\n        // }\r\n        tweetIndex < 0 ? favesTweets.unshift(tweetId) : favesTweets.splice(tweetIndex, 1);\r\n        // console.log(\"after if statment :\", favesTweets);\r\n        // this.setState({ favesTweets });\r\n        // console.log(\"state edit: \", this.state.favesTweets);\r\n        // console.log(faves);\r\n        // console.log(tweetIndex);\r\n        // this.setState({ favesTweets: faves });\r\n        this.editFavesTweetsOnDb(favesTweets);\r\n    }\r\n\r\n    editFavesTweetsOnDb = (favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        console.log(\"state: \", favesTweets);\r\n        console.log(\"before edit: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    //to delete specific tweet - by id \r\n    handleDeleteClick = (tweetId) => {\r\n        //bring target tweet by id\r\n        //check if tweet in Tweetslist and get their index \r\n        //check if id store in favestweet list === there ? delete id : skip\r\n        //delete tweets from tweet list \r\n        //edit on db \r\n        const allTweets = this.state.tweets.slice();\r\n        // console.log(\"all tweets: \", allTweets);\r\n        // console.log(\"target tweet id: \", tweetId);\r\n        // const tweetIndex = allTweets.indexOf(allTweets[tweetId - 1]);\r\n        const tweetIndex = allTweets.indexOf(this.getTweet(tweetId));\r\n        // console.log(\"target tweet index: \", tweetIndex);\r\n        // console.log(\"tweet index: \", tweetIndex);\r\n        // tweetIndex > -1 ? console.log('remove', allTweets[tweetIndex].content) : console.log('not there');\r\n        tweetIndex > -1 ? allTweets.splice(tweetIndex, 1) : console.log(\"object\");\r\n        // console.log(allTweets);\r\n\r\n        // //second check if the target tweet in favesTweet\r\n        const favesTweets = this.state.favesTweets.slice();\r\n        const faveTweetIndex = favesTweets.indexOf((tweetId));\r\n        // console.log(faveTweetIndex);\r\n        // tweetIndex < 0 ? console.log(\"skip\") : console.log(\"remove\");\r\n        if (tweetIndex > -1) {\r\n            favesTweets.splice(faveTweetIndex, 1);\r\n        }\r\n\r\n        this.deleteTweetFromDb1(allTweets, favesTweets);\r\n    }\r\n\r\n    deleteTweetFromDb1 = (tweets, favesTweets) => {\r\n        //get current data in db\r\n        //set new favestweet array \r\n        //save the db \r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        //first delete tweet from alltweet list\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n        // console.log(\"tweet list before remove: \", getUserDetails[0].tweets.tweet);\r\n        getUserDetails[userId].tweets.tweet = tweets;\r\n        // console.log(\"after edit: \", getUserDetails[0].tweets.tweet);\r\n\r\n        // console.log(\"faves tweets before delete: \", getUserDetails[userId].favesTweets);\r\n        getUserDetails[userId].favesTweets = favesTweets;\r\n        // console.log(\"after faves tweets after delete: \", getUserDetails[userId].favesTweets);\r\n\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        this.setState({ favesTweets });\r\n        // console.log(\"faves tweets in state: \", this.state.favesTweets);\r\n        window.location.reload();\r\n        this.setState({ tweets });\r\n    }\r\n\r\n    getTweet = (tweetId) => {\r\n        let id = 0;\r\n        this.state.tweets.map((element, index) => {\r\n            // console.log(tweetId);\r\n            // console.log(element.id);\r\n\r\n            if (element.id === tweetId) {\r\n                id = element;\r\n                // console.log(\"yes\");\r\n\r\n            }\r\n        });\r\n\r\n        return id;\r\n    }\r\n\r\n    handleOptionClicked = () => {\r\n        const option = this.props.handleOptionClicked;\r\n        if (option === 'deleteAllTweetsClicked') {\r\n            console.log(option);\r\n            this.handleDeleteAllTweetsClicked();\r\n        } else if (option === 'deleteAllFavesTweetsClicked') {\r\n            console.log(option);\r\n            this.handleDeleteAllFavesTweetsClicked();\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n        console.log(this.props.user.tweets.tweet.length);\r\n        if (this.props.user.tweets.tweet.length === 0) {\r\n            //there is no tweet to delete it \r\n        } else {\r\n            //get current data in db\r\n            //delete all tweets\r\n            const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n            //first delete alltweet list\r\n            const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n            getUserDetails[userId].tweets.tweet = [];\r\n            this.setState({ tweets: [] });\r\n\r\n            //first delete allfavestweet list\r\n            getUserDetails[userId].favesTweets = [];\r\n            this.setState({ favesTweets: [] });\r\n\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n        console.log(this.props.user.favesTweets.length);\r\n        if (this.props.user.favesTweets.length === 0) {\r\n            //there is no tweet to delete it \r\n        } else {\r\n            //get current data in db\r\n            //delete all tweets\r\n            const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n            //first delete alltweet list\r\n            const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n            //first delete allfavestweet list\r\n            getUserDetails[userId].favesTweets = [];\r\n            this.setState({ favesTweets: [] });\r\n\r\n            localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n\r\n    handleEditClicked = (tweetId, newContent) => {\r\n\r\n        console.log(\"edit clicked\" + tweetId, newContent);\r\n        this.editTargetTweetOnDb(tweetId, newContent);\r\n    }\r\n\r\n\r\n    editTargetTweetOnDb = (tweetId, newContent) => {\r\n        //get current tweet in db\r\n        //set new ontent to current tweet  \r\n        //save the db \r\n\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userId = parseInt(localStorage.getItem(\"userLoggedInId\")) - 1;\r\n\r\n        getUserDetails[userId].tweets.tweet.map((element, index) => {\r\n            if (element.id === tweetId) {\r\n                element.content = newContent\r\n                console.log(element);\r\n            }\r\n        })\r\n        // console.log(\"after edit: \", getUserDetails[userId].favesTweets);\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        window.location.reload();\r\n        // this.setState({ favesTweets });\r\n\r\n    }\r\n\r\n    render() {\r\n        this.handleOptionClicked();\r\n        const tweets = this.props.user.tweets.tweet.map((element, index) => {\r\n            if (this.state.favesTweets.includes(element.id)) {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} handleEditClicked={this.handleEditClicked} tweetId={element.id} tweetContent={element.content} isFave={true} />\r\n                );\r\n            } else {\r\n                return (<TweetRow userName={this.state.userName} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} handleEditClicked={this.handleEditClicked} tweetId={element.id} tweetContent={element.content} isFave={false} />);\r\n            }\r\n        })\r\n\r\n        // //the faves tweet saved by id of tweet so, fisrt: we need to get faves tweet id then get these tweet by id\r\n        const favesTweet = this.state.favesTweets.map((favesTweetId, index) => {\r\n            // console.log(favesTweetId, ' ');\r\n            // const getTweet = this.state.tweets[0];\r\n            // console.log(this.getTweet(favesTweetId));\r\n            const getTweet = this.getTweet(favesTweetId);\r\n            // console.log(favesTweetId, ' ');\r\n            if (getTweet !== undefined) {\r\n                // console.log(favesTweetId);\r\n                // console.log(' content ', getTweet.content);\r\n\r\n                return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} handleDeleteClick={this.handleDeleteClick} tweetContent={getTweet.content} isFave={true} />\r\n                )\r\n            }\r\n            return (<TweetRow userName={this.props.user.userName} tweetId={favesTweetId} isFaveToggle={this.handleFaveToggle} tweetContent={getTweet.content} isFave={true} />\r\n            )\r\n            // console.log(this.props.userLoggedInId);\r\n\r\n        });\r\n        // const favesTweet = ''\r\n\r\n        // console.log(this.state.displayName);\r\n        return (\r\n            // {this.state.tweet1.forEach(element => {\r\n            //     console.log(element.content);\r\n            // })}\r\n            <div className=\"TweetList\" >\r\n                {/* <TweetRow userName={this.state.userName} tweetId={1} tweetContent={this.state.tweet} /> */}\r\n                { this.state.listedTweets === 'all' ?\r\n                    this.props.user.tweets.tweet.length !== 0 ? tweets : 'There is no tweets! Start write your tweet Now' :\r\n                    this.props.user.favesTweets.length !== 0 ? favesTweet : 'There is no Faves Tweets'\r\n                }\r\n                {/* {this.state.listedTweets === 'all' ? this.state.favesTweets.length < 0 ? '' : favesTweet : ''} */}\r\n\r\n                {/* {tweets} */}\r\n                {/**<FavesTweets />*/}\r\n                {/* {favesTweet} */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass NewTweet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showModalStatus,\r\n            newTweetContent: ''\r\n        }\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ show: this.props.showModalStatus });\r\n    // }\r\n\r\n    handleClose = () => {\r\n        this.props.handleShow();\r\n        // this.setState({ show: false });\r\n        // console.log(\"handle show inside handleClose:\", this.state.show);\r\n    }\r\n\r\n    assignValueToState = (event) => {\r\n        let newTweetContent = event.target.value;\r\n        this.setState({ newTweetContent })\r\n        // console.log(\"tweet content:\", this.state.newTweetContent);\r\n    }\r\n\r\n    getTweetContent = () => {\r\n        this.props.insertNewTweet(this.state.newTweetContent);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handle show:\", this.props.showModalStatus);\r\n        return (\r\n            <div className=\"NewTweet\">\r\n                {/* <Button variant=\"primary\" onClick={this.handleShow}>\r\n                    Launch demo modal\r\n                </Button> */}\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton >\r\n                        <Modal.Title>Write New Tweet</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" name=\"newTweet\" value={this.state.n} placeholder=\"Write here\" onChange={this.assignValueToState} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button> */}\r\n                        <Button variant=\"primary\" onClick={this.getTweetContent}>\r\n                            Add new Tweet\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                {/* hello + {this.state.show} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTweet;\r\n","import React, { Component } from 'react';\r\nimport TweetList from './Tweet-list';\r\nimport '../comonents-style/Home.css'\r\nimport NewTweet from './NewTweet';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // props.history.location.state.userId\r\n            userLoggedInId: parseInt(localStorage.getItem('userLoggedInId')),\r\n            showComponent: false,\r\n            handleClicked: false,\r\n            userLoggedInDetails: {},\r\n            newTweetContent: ''\r\n        }\r\n\r\n        this.getTheNewTweetContent = this.getTheNewTweetContent.bind(this)\r\n        this.insertNewTweet = this.insertNewTweet.bind(this)\r\n    }\r\n\r\n    getUserLoggedInDetails = () => {\r\n        // newTweetContent\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[userLoggedInId - 1]\r\n        });\r\n    }\r\n    handleAddClicked = () => {\r\n        // console.log(\"add icon clicked\");\r\n        this.setState({\r\n            showComponent: true,\r\n            handleClicked: true\r\n        });\r\n\r\n    }\r\n\r\n    insertNewTweet = (newTweetComponent) => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const indexOfUserId = this.state.userLoggedInId - 1;\r\n        const currentTweets = getUserDetails[indexOfUserId].tweets.tweet;\r\n        console.log(currentTweets.length);\r\n        console.log(newTweetComponent);\r\n        const newTweet = {\r\n            id: currentTweets.length + 1,\r\n            content: newTweetComponent\r\n        };\r\n        console.log(indexOfUserId);\r\n        // console.log(getUserDetails[indexOfUserId].tweets.tweet);\r\n        currentTweets.unshift(newTweet);\r\n        getUserDetails[indexOfUserId].tweets.tweet = currentTweets;\r\n        localStorage.setItem('TwitterDB', JSON.stringify(getUserDetails));\r\n        // window.location.reload();\r\n        this.setState({\r\n            userLoggedInDetails: getUserDetails[indexOfUserId]\r\n        });\r\n\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            showComponent: false,\r\n            handleClicked: false\r\n        });\r\n        // console.log(\"handleShowModalToggle value :\", this.state.showComponent);\r\n    }\r\n\r\n    getTheNewTweetContent = (newTweetContent) => {\r\n        this.setState({ newTweetContent: newTweetContent })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getUserLoggedInDetails();\r\n\r\n    }\r\n\r\n    handleSignOutClicked = () => {\r\n        // console.log(this.props.handleOptionClicked);\r\n        if (this.props.handleOptionClicked === 'signOutClicked') {\r\n            console.log('hello');\r\n            // this.props.history.push(\"/\");\r\n            // console.log(this.props.history);\r\n            return <Route path=\"/user/home\" to=\"/\" />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const numOfTweets = this.state.userLoggedInDetails.tweets.tweet.length;\r\n        const style = (numOfTweets === 0) ? 'emptyList' : numOfTweets === 1 ? \"oneTweet\" : numOfTweets === 2 ? 'twoTweet' : '';\r\n\r\n        this.handleSignOutClicked();\r\n        return (\r\n            <div className=\"Home\">\r\n                {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? this.props.history.push(\"/ashwagzabani/Project-2/\") : (\r\n                    <>\r\n                        <TweetList getUserDetails={() => this.getUserLoggedInDetails()} user={this.state.userLoggedInDetails} listedTweets={this.props.listedTweets} handleOptionClicked={this.props.handleOptionClicked} />\r\n                        {/* {this.props.tweets} */}\r\n                        {this.props.listedTweets === 'all' ? <span className={\"addIcon \" + style} onClick={() => this.handleAddClicked()} ><i className=\"fa fa-plus-circle\"></i></span> : ''}\r\n                        {/* <NewTweet /> */}\r\n                        {this.state.handleClicked ? <NewTweet handleShow={this.handleShow} showModalStatus={this.state.handleClicked} insertNewTweet={this.insertNewTweet} /> : null}\r\n                    </>\r\n                )}\r\n                {/*home page*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/news.689ddb26.png\";","import React, { Component } from 'react';\r\nimport '../comonents-style/AxiosContentRow.css'\r\nimport news from '../news.png'\r\nimport { Card } from 'react-bootstrap'\r\nclass AxiosContentRow extends Component {\r\n    render() {\r\n        return (\r\n            <Card className=\"AxiosContentRow\">\r\n                {this.props.imgUrl !== null ? <img src={this.props.imgUrl} /> : <img src={news} />}\r\n                <p>{this.props.title}</p>\r\n                {/* <p>{\" ` \" + this.props.quetContent + \" ` \"}</p> */}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AxiosContentRow;\r\n","import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Sports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('https://newsapi.org/v2/top-headlines?country=sa&apiKey=6d73526b0ae34c5d9b8d1d9b7ba6c9da&category=sports&pageSize', 'tab1responseData');\r\n        // this.setState({ responseData: this.props.responseData })\r\n        // this.bringAxios();\r\n    }\r\n    render() {\r\n        console.log(this.props.responseData);\r\n        let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.articles.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.urlToImage} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sports;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass HealthNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('https://newsapi.org/v2/top-headlines?country=sa&apiKey=6d73526b0ae34c5d9b8d1d9b7ba6c9da&category=health&pageSize', 'tab2responseData');\r\n        \r\n    }\r\n\r\n    render() {\r\n         console.log(this.props.responseData);\r\n         let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.articles.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.urlToImage} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HealthNews;\r\n","import React, { Component } from 'react';\r\nimport AxiosContentRow from './AxiosContentRow';\r\n\r\nclass Technology extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=sports\r\n        // this.props.callBackAxios('https://ghibliapi.herokuapp.com/films/?limit');\r\n        this.props.callBackAxios('https://newsapi.org/v2/top-headlines?country=sa&apiKey=6d73526b0ae34c5d9b8d1d9b7ba6c9da&category=technology&pageSize', 'tab3responseData');\r\n        // this.setState({ responseData: this.props.responseData })\r\n        // this.bringAxios();\r\n    }\r\n    render() {\r\n        console.log(this.props.responseData);\r\n        let getQuetList = '';\r\n        if (this.props.responseData.length !== 0) {\r\n            getQuetList = this.props.responseData.articles.map(element => {\r\n                console.log(element.title);\r\n                return (<AxiosContentRow title={element.title} imgUrl={element.urlToImage} />);\r\n            })\r\n            console.log(\"nooooo\");\r\n        }\r\n        return (\r\n            <div className=\"News\">\r\n                {getQuetList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Technology;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Row,\r\n    Col,\r\n    Nav\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Sports from './Sports';\r\nimport HealthNews from './HealthNews';\r\nimport Technology from './Technology';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Explore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tab1responseData: [],\r\n            tab2responseData: [],\r\n            tab3responseData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bringAxios()\r\n    }\r\n\r\n    // reset = (tabResponseData) => {\r\n    //     this.setState({ responseData: [] })\r\n    // }\r\n    //     // onClick={() => this.bringAxios('http://api.mediastack.com/v1/news?access_key=ddce94e898a6f1e3b3ebad3ef09516c2&categories=science&languages=en&limit')}\r\n\r\n    bringAxios = (url, tab) => {\r\n        const limit = 5;\r\n        axios\r\n            .get(`${url}=${limit}`)\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                console.log(tab);\r\n                this.setState({ [tab]: responseData })\r\n                console.log(this.state.tab2responseData);\r\n                // setResponseFilmsData(res, limit);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"Explore container\">\r\n                    <Tabs defaultActiveKey=\"Sports\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Sports\" title=\"Sports\">\r\n                            <Sports responseData={this.state.tab1responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path='/expolre/Sports' render={props => <Sports {...props} responseData={this.state.responseData} callBackAxios={this.bringAxios} />} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"HealthNews\" title=\"Health\" >\r\n                            <HealthNews responseData={this.state.tab2responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/news\" component={News} /> */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"Technology\" title=\"Technology\">\r\n                            <Technology responseData={this.state.tab3responseData} callBackAxios={this.bringAxios} />\r\n                            {/* <Route path=\"/explore/Technology\" component={Technology} /> */}\r\n                        </Tab>\r\n                    </Tabs>\r\n                    {/* <Tabs id=\"uncontrolled-tab-example\" defaultActiveKey=\"Sports\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/expolre/Sports\" eventKey=\"Sports\" ><i className=\"fa fa-home\"></i>{'  '}Sports</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/Technology\" eventKey=\"Technology\" ><i className=\"fa fa-newspaper\"></i>{'  '}Technology</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/explore/news\" eventKey=\"News\"><i className=\"fa fa-star\"></i>{'  '}News</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Route path='/expolre/Sports' component={Sports} />\r\n                            <Route path='/explore/Technology' component={Technology} />\r\n                            <Route path='/explore/news' component={News} />\r\n                        </Tab.Content>\r\n\r\n                    </Tabs> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explore;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Search\">\r\n                Search\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport '../comonents-style/Header.css'\r\nimport '../comonents-style/Landing-page.css'\r\n\r\nclass LandingPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LandingPage\">\r\n                <div className=\"header1\">\r\n                    <p>MINI-TWITTER</p>\r\n                    <Button className=\"signIn\" variant=\"primary\" as={Link} to=\"/ashwagzabani/Project-2/signIn\">Sign In</Button>\r\n\r\n                </div>\r\n                <Jumbotron>\r\n                    <h1>Welcom to mini-twitter</h1>\r\n                    <p>\r\n                        Join to a simple social now, enjoy writing your tweets.\r\n                    </p>\r\n                    <p>\r\n                        <Button variant=\"primary\" as={Link} to=\"/ashwagzabani/Project-2/register\">Join Now</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Button,\r\n    Card\r\n} from 'react-bootstrap'\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: '',\r\n            alert: false\r\n\r\n        }\r\n\r\n        this.assignValueToState = this.assignValueToState.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * When the user click on register button the register function will be call\r\n     */\r\n    register = (e) => {\r\n\r\n        e.preventDefault();\r\n        //call validation method \r\n        //if validtion ir true => redirect to user home page\r\n        this.validation();\r\n\r\n        // console.log(this.state.TwitterDB);\r\n    }//end-register fun.\r\n\r\n    /**\r\n     * after allow the user to register his information will be saved in db - localstorage\r\n     */\r\n    getNewUser = (id) => {\r\n        let newUser = {};\r\n        return newUser = {\r\n            \"id\": id,\r\n            \"userName\": this.state.userName,\r\n            \"displayName\": this.state.displayName,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"tweets\": {\r\n                \"tweet\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"content\": \"Hello, this my fisrt tweet\"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"content\": \"Good morning\"\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"content\": \"Good afternoon\"\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"content\": \"hello\"\r\n                    },\r\n                    {\r\n                        \"id\": 5,\r\n                        \"content\": \"TEST1\"\r\n                    },\r\n                    {\r\n                        \"id\": 6,\r\n                        \"content\": \"test2\"\r\n                    },\r\n                    {\r\n                        \"id\": 7,\r\n                        \"content\": \"ashwag\"\r\n                    },\r\n                    {\r\n                        \"id\": 8,\r\n                        \"content\": \"SEI-14\"\r\n                    },\r\n                    {\r\n                        \"id\": 9,\r\n                        \"content\": \"today\"\r\n                    },\r\n                    {\r\n                        \"id\": 10,\r\n                        \"content\": \"today\"\r\n                    }\r\n                ]\r\n            },\r\n            \"favesTweets\": []\r\n        }\r\n    }//end-getNewUser fun.\r\n\r\n    /**\r\n     * After clicked on register button the validation fun. will be call via register func.\r\n     * validation func. => check if the user name and email are already register \r\n     */\r\n    validation = () => {\r\n\r\n        if (this.state.userName === '' || this.state.displayName === '' || this.state.email === '' || (this.state.password !== '' && this.state.password.length < 6)) {\r\n            // console.log(\"please fill the input required\");\r\n            //alert error\r\n\r\n        } else {\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n\r\n                //the TwitterDb is empty,so there is no users to check\r\n                let arrOfObject = [];\r\n                let userId = 1;\r\n                const newUser = this.getNewUser(userId);\r\n                localStorage.setItem('userLoggedInId', userId)\r\n                arrOfObject.push(newUser);\r\n                localStorage.setItem('TwitterDB', JSON.stringify(arrOfObject))\r\n                this.props.history.push(\"/user/home\")\r\n\r\n            } else {\r\n\r\n                // nedd check if the userName or Email already exsist\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n\r\n                    //after check all of db and the user name and email are not exsist allow user to register\r\n                    if (((getTwitterDB.length - 1) === index) && (element.userName !== this.state.userName) && (element.email !== this.state.email)) {\r\n\r\n                        // console.log(\"passed\");\r\n                        const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                        let userId = getTwitterDB.length + 1;\r\n                        localStorage.setItem('userLoggedInId', userId)\r\n                        const newUser = this.getNewUser(userId)\r\n                        this.setState({ userId })\r\n                        getTwitterDB.push(newUser);\r\n                        localStorage.setItem('TwitterDB', JSON.stringify(getTwitterDB));\r\n                        this.props.history.push(\"/ashwagzabani/Project-2/user/home\")\r\n\r\n                    } else {\r\n\r\n                        if (element.userName === this.state.userName) {\r\n\r\n                            // console.log(\"the user Name already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'userName' })\r\n                            if (element.email === this.state.email) {\r\n                                // console.log(\"the email already exsist\");\r\n                                //alert error\r\n                                this.alertMessage();\r\n                                this.setState({ alert: true, alertValue: 'userName & email' })\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            // console.log(\"the email already exsist\");\r\n                            //alert error\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'email' })\r\n\r\n                        }// end-else\r\n                    }// end-else\r\n                })//end-map\r\n            }//end-else\r\n        }//end-else\r\n    }//end-validation fun.\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * the alerMessage fun. will be call via validation\r\n     * if the user name and email are already exsist the alert message will be show\r\n     */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is already used';\r\n        } else if (this.state.alertValue === 'email') {\r\n            alertValue = 'The email is already registered';\r\n        } else if (this.state.alertValue === 'userName & email') {\r\n            alertValue = 'The user name and the email are already registered';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"RegisterForm\" >\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>User Information</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Display Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"displayName\" value={this.state.displayName} placeholder=\"Enter display name\" onChange={this.assignValueToState} />\r\n                                {this.state.displayName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.assignValueToState} />\r\n                                {this.state.email === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.register}>Register</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Tab,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    Popover,\r\n    OverlayTrigger,\r\n    Dropdown\r\n} from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Explore from './Explore';\r\nimport Search from './Search';\r\nimport '../comonents-style/UserHomePage.css'\r\nclass UserHomePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // deleteAllTweetsClicked: false,\r\n            // deleteAllFavesTweetsClicked: false,\r\n            // signOutClicked: false\r\n            handleTypeClicked: ''\r\n        }\r\n    }\r\n\r\n    handleDeleteAllTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handleDeleteAllFavesTweetsClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'deleteAllFavesTweetsClicked'\r\n        })\r\n    }\r\n\r\n    handlesignOutClicked = () => {\r\n        this.setState({\r\n            handleTypeClicked: 'signOutClicked'\r\n        })\r\n        localStorage.setItem(\"userLoggedInId\", -1)\r\n        console.log(localStorage.getItem(\"userLoggedInId\"));\r\n    }\r\n\r\n    userLoggedInDisplayName = () => {\r\n        const getUserDetails = JSON.parse(localStorage.getItem('TwitterDB'));\r\n        const userLoggedInId = parseInt(localStorage.getItem('userLoggedInId'));\r\n        const userDisplayName = getUserDetails[userLoggedInId - 1].displayName;\r\n        return (<span>{userDisplayName}</span>)\r\n\r\n    }\r\n\r\n    render() {\r\n        //pop up message \r\n        const popover = (\r\n            <Popover>\r\n                {/* <ul>\r\n            <li>My Profile</li>\r\n            <li>Followers</li>\r\n            <li>Sign out</li>\r\n          </ul> */}\r\n                <Dropdown href=\"#/action-1\">\r\n                    <Dropdown>\r\n                        <span>Settings</span>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllTweetsClicked}>Delete All Tweets</Dropdown.Item>\r\n                        <Dropdown.Item onClick={this.handleDeleteAllFavesTweetsClicked}>Delete All Favorite Tweets</Dropdown.Item>\r\n                    </Dropdown>\r\n                    <Dropdown.Item as={Link} to=\"/ashwagzabani/Project-2/\" onClick={this.handlesignOutClicked}>Sign out</Dropdown.Item>\r\n                </Dropdown>\r\n            </Popover>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Home\" >\r\n                <div className=\"header header-home\">\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Home\">\r\n                        <Row>\r\n                            <Col sm={3}>\r\n                                <div className=\"flex-column-sm\">\r\n                                    {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? '' : this.userLoggedInDisplayName()\r\n                                    }\r\n                                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                                        <span className=\"options\">\r\n                                            <i className=\"fa fa-bars\">\r\n                                            </i>\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <Nav variant=\"pills\" className=\"clg-sm-12 bottom\">\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/ashwagzabani/Project-2/user/home\" eventKey=\"Home\" ><i className=\"fa fa-home\"></i>{'  '}Home</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/ashwagzabani/Project-2/user/explore\" eventKey=\"Explore\" ><i className=\"fa fa-rss\"></i>{'  '}News</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link as={Link} to=\"/ashwagzabani/Project-2/user/favesTweets\" eventKey=\"favesTweets\"><i className=\"fa fa-star\"></i>{'  '}Faves</Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            </Col>\r\n                            <Col sm={9}>\r\n                                <div className=\"flex-column-lg\">\r\n                                    {parseInt(localStorage.getItem(\"userLoggedInId\")) < 0 ? '' : this.userLoggedInDisplayName()\r\n                                    }\r\n                                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                                        <span className=\"options\">\r\n                                            <i className=\"fa fa-bars\">\r\n                                            </i>\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <Tab.Content>\r\n                                    {/* <Tab.Pane eventKey=\"Home\">\r\n                                    <Route path='/user/home' render={props => <Home {...props} />} />\r\n                                </Tab.Pane> */}\r\n                                    {/* <Tab.Pane eventKey=\"second\">\r\n                    <Route path='/news' component={News} />\r\n                  </Tab.Pane> */}\r\n                                    <Route path='/ashwagzabani/Project-2/user/home' render={props => <Home {...props} listedTweets='all' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                    <Route path='/ashwagzabani/Project-2/user/explore' component={Explore} />\r\n                                    <Route path='/ashwagzabani/Project-2/user/favesTweets' render={props => <Home {...props} listedTweets='favesTweets' handleOptionClicked={this.state.handleTypeClicked} />} />\r\n                                </Tab.Content>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab.Container>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHomePage;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Alert,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap'\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            TwitterDB: '',\r\n            userId: 0,\r\n            userName: '',\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            alertValue: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To get and store input value in state\r\n     */\r\n    assignValueToState = (event) => {\r\n        let fieldName = event.target.name;\r\n        // console.log(this.state.[fieldName]);\r\n        // console.log(fieldName);\r\n\r\n\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        // const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n\r\n        // if (this.state.userId <= (getTwitterDB.length + 1)) {\r\n        //     this.setState({\r\n        //         userId: getTwitterDB.length + 1\r\n        //     })\r\n        // }\r\n        // if (fieldName !== 'password') {\r\n        //     this.validation(fieldName, event.target.value);\r\n        // }\r\n    }//end-assignValueToState fun.\r\n\r\n    /**\r\n     * When the user click on sign in button the signIn function will be call\r\n     */\r\n    signIn = (e) => {\r\n        e.preventDefault();\r\n        this.validation();\r\n    }//end-signIn fun.\r\n\r\n    /**\r\n    * After clicked on sign in button the validation fun. will be call via signIn func.\r\n    * validation func. => check if the user name and email are not exsists \r\n    */\r\n    validation = () => {\r\n        if (this.state.userName === '' || this.state.password === '') {\r\n            console.log(\"please fill the input required\");\r\n        } else {\r\n            // console.log(\"you are not register\");\r\n            // //get Twitter Db from local storage\r\n\r\n            if (localStorage.getItem('TwitterDB') == '') {\r\n                //the TwitterDb is empty\r\n                //alert => your are not registerd\r\n                console.log(\"you are not register\");\r\n            } else {\r\n                // console.log(\"you are register\");\r\n                const getTwitterDB = JSON.parse(localStorage.getItem('TwitterDB'));\r\n                getTwitterDB.map((element, index) => {\r\n                    if (element.userName === this.state.userName) {\r\n                        // console.log(\"step check userName ==> pass\");\r\n                        if (element.password === this.state.password) {\r\n                            // console.log(\"step check password ==> pass\");\r\n                            parseInt(localStorage.setItem(\"userLoggedInId\", element.id))\r\n                            this.props.history.push(\"/user/home\")\r\n                        } else {\r\n                            // console.log(\"Your password is error \");\r\n                            this.alertMessage();\r\n                            this.setState({ alert: true, alertValue: 'password' })\r\n                        }\r\n                    } else if (getTwitterDB.length - 1 === index) {\r\n                        // console.log(\"Your User Name is error or you are not register\");\r\n                        this.alertMessage();\r\n                        this.setState({ alert: true, alertValue: 'userName' })\r\n\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }//end-validation fun.\r\n\r\n    /**\r\n      * the alerMessage fun. will be call via validation\r\n      * if the user name and email are not exsist the alert message will be show\r\n      */\r\n    alertMessage = () => {\r\n        console.log(this.state.alertValue);\r\n        let alertValue = '';\r\n        if (this.state.alertValue === 'userName') {\r\n            alertValue = 'The user name is not exsist';\r\n        } else if (this.state.alertValue === 'password') {\r\n            alertValue = 'The passwrod is not correct';\r\n        }\r\n        // console.log(alertValue);\r\n        setTimeout(() => { this.setState({ alert: false, alertValue: '' }) }, 3000);\r\n\r\n        return (\r\n            <Alert variant='warning'>\r\n                {alertValue}\r\n            </Alert>);\r\n    }//end-alertMessage fun.\r\n\r\n    render() {\r\n        return (\r\n            <Card className='SignIn'>\r\n                <form>\r\n                    <fieldset>\r\n                        <Card.Header><h3>Welcome Back!</h3></Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.alert ? this.alertMessage() : ''}\r\n                            <Form.Group>\r\n                                <Form.Label>User Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"userName\" value={this.state.userName} placeholder=\"Enter user name\" onChange={this.assignValueToState} />\r\n                                {this.state.userName === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} type=\"password\" placeholder=\"Enter password\" onChange={this.assignValueToState} />\r\n                                {this.state.password === '' ?\r\n                                    (< Form.Text>please fill required field </Form.Text>)\r\n\r\n                                    : this.state.password.length < 6 ?\r\n\r\n                                        (< Form.Text>Your password must be at least 6 characters</Form.Text>) : ''}\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.signIn}>Sign In</Button>\r\n                        </Card.Body>\r\n                    </fieldset>\r\n                </form>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\nimport './App.css';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";//HashRouter\nimport Home from './components/Home';\nimport Explore from './components/Explore';\nimport Search from './components/Search';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {\n  Tab,\n  Row,\n  Col,\n  Nav,\n  Popover,\n  OverlayTrigger,\n  Dropdown\n} from 'react-bootstrap'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Nav from 'react-bootstrap/Nav'\n// import Popover from 'react-bootstrap/Popover'\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport 'font-awesome/css/font-awesome.min.css';\nimport TwitterDB from './TwitterDB'\nimport LandingPage from './components/Landing-page';\nimport RegisterForm from './components/Register-form';\nimport UserHomePage from './components/UserHomePage';\nimport HealthNews from './components/HealthNews';\nimport SignIn from './components/SignIn';\n\nclass App extends Component {\n\n  //to check if there is a db store on local storage , unless create a db \n  componentDidMount() {\n    if (localStorage.getItem('TwitterDB') === null) {\n      console.log('empty');\n      localStorage.setItem('TwitterDB', [])\n    } else {\n      console.log('not empty');\n    }\n  }\n\n  render() {\n\n    return (\n      <Router basename={process.env.PUBLIC_URL} >\n        <div className=\"App\">\n\n          <Route exact path=\"/ashwagzabani/Project-2/\" component={LandingPage} />\n          <Route path=\"/ashwagzabani/Project-2/register\" component={RegisterForm} />\n          <Route path='/ashwagzabani/Project-2/user' component={UserHomePage} />\n          <Route path='/ashwagzabani/Project-2/signIn' component={SignIn} />\n\n          {/* <Route path=\"/explore/news\" render={props => <News {...props} />} /> /> */}\n          {/* <Route path='/user/home' render={props => <Home {...props} />} /> */}\n          {/* <Route path='/user/explore' component={Explore} /> */}\n          {/* <Route path='/user/search' component={Search} /> */}\n          {/* <Route path='/user/favesTweets' component={FavesTweets} /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}